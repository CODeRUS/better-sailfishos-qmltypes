import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable MeeGo.QOfono 0.2'

Module {
    Component {
        name: "QOfonoAssistedSatelliteNavigation"
        prototype: "QObject"
        exports: ["MeeGo.QOfono/OfonoAssistedSatelliteNavigation 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "modemPath"; type: "string" }
        Signal {
            name: "modemPathChanged"
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "registerPositioningRequestAgent"
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "sendPositioningElement"
            Parameter { name: "xmlElement"; type: "string" }
        }
        Method {
            name: "unregisterPositioningRequestAgent"
            Parameter { name: "path"; type: "string" }
        }
    }
    Component {
        name: "QOfonoCallBarring"
        prototype: "QOfonoModemInterface"
        exports: ["MeeGo.QOfono/OfonoCallBarring 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "voiceIncoming"; type: "string"; isReadonly: true }
        Property { name: "voiceOutgoing"; type: "string"; isReadonly: true }
        Signal {
            name: "voiceIncomingChanged"
            Parameter { name: "barrings"; type: "string" }
        }
        Signal {
            name: "voiceOutgoingChanged"
            Parameter { name: "barrings"; type: "string" }
        }
        Signal {
            name: "voiceIncomingComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "voiceOutgoingComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Signal { name: "getPropertiesFailed" }
        Signal {
            name: "changePasswordComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "disableAllComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "disableAllIncomingComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "disableAllOutgoingComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Method {
            name: "changePassword"
            Parameter { name: "oldPassword"; type: "string" }
            Parameter { name: "newPassword"; type: "string" }
        }
        Method {
            name: "disableAll"
            Parameter { name: "password"; type: "string" }
        }
        Method {
            name: "disableAllIncoming"
            Parameter { name: "password"; type: "string" }
        }
        Method {
            name: "disableAllOutgoing"
            Parameter { name: "password"; type: "string" }
        }
        Method {
            name: "setVoiceIncoming"
            Parameter { name: "barrings"; type: "string" }
            Parameter { name: "password"; type: "string" }
        }
        Method {
            name: "setVoiceOutgoing"
            Parameter { name: "barrings"; type: "string" }
            Parameter { name: "password"; type: "string" }
        }
    }
    Component {
        name: "QOfonoCallForwarding"
        prototype: "QOfonoModemInterface"
        exports: ["MeeGo.QOfono/OfonoCallForwarding 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "voiceUnconditional"; type: "string" }
        Property { name: "voiceBusy"; type: "string" }
        Property { name: "voiceNoReply"; type: "string" }
        Property { name: "voiceNoReplyTimeout"; type: "ushort" }
        Property { name: "voiceNotReachable"; type: "string" }
        Property { name: "forwardingFlagOnSim"; type: "bool"; isReadonly: true }
        Signal {
            name: "voiceUnconditionalChanged"
            Parameter { name: "property"; type: "string" }
        }
        Signal {
            name: "voiceBusyChanged"
            Parameter { name: "property"; type: "string" }
        }
        Signal {
            name: "voiceNoReplyChanged"
            Parameter { name: "property"; type: "string" }
        }
        Signal {
            name: "voiceNoReplyTimeoutChanged"
            Parameter { name: "timeout"; type: "ushort" }
        }
        Signal {
            name: "voiceNotReachableChanged"
            Parameter { name: "property"; type: "string" }
        }
        Signal {
            name: "forwardingFlagOnSimChanged"
            Parameter { name: "property"; type: "bool" }
        }
        Signal { name: "getPropertiesFailed" }
        Signal {
            name: "voiceUnconditionalComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "voiceBusyComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "voiceNoReplyComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "voiceNoReplyTimeoutComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "voiceNotReachableComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Method {
            name: "disableAll"
            Parameter { name: "type"; type: "string" }
        }
    }
    Component {
        name: "QOfonoCallMeter"
        prototype: "QOfonoModemInterface"
        exports: ["MeeGo.QOfono/OfonoCallMeter 0.2"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Error"
            values: {
                "NoError": 0,
                "NotImplementedError": 1,
                "InProgressError": 2,
                "InvalidArgumentsError": 3,
                "InvalidFormatError": 4,
                "FailedError": 5,
                "UnknownError": 6
            }
        }
        Property { name: "callMeter"; type: "uint"; isReadonly: true }
        Property { name: "accumulatedCallMeter"; type: "uint"; isReadonly: true }
        Property { name: "accumulatedCallMeterMaximum"; type: "uint"; isReadonly: true }
        Property { name: "pricePerUnit"; type: "float"; isReadonly: true }
        Property { name: "currency"; type: "string"; isReadonly: true }
        Signal { name: "nearMaximumWarning" }
        Signal {
            name: "accumulatedCallMeterMaximumChanged"
            Parameter { type: "uint" }
        }
        Signal {
            name: "pricePerUnitChanged"
            Parameter { type: "float" }
        }
        Signal {
            name: "resetComplete"
            Parameter { name: "error"; type: "QOfonoCallMeter::Error" }
            Parameter { name: "errorString"; type: "string" }
        }
        Method {
            name: "reset"
            Parameter { name: "password"; type: "string" }
        }
    }
    Component {
        name: "QOfonoCallSettings"
        prototype: "QOfonoModemInterface"
        exports: ["MeeGo.QOfono/OfonoCallSettings 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "hideCallerId"; type: "string" }
        Property { name: "voiceCallWaiting"; type: "string" }
        Property { name: "callingLinePresentation"; type: "string"; isReadonly: true }
        Property { name: "calledLinePresentation"; type: "string"; isReadonly: true }
        Property { name: "callingNamePresentation"; type: "string"; isReadonly: true }
        Property { name: "connectedLinePresentation"; type: "string"; isReadonly: true }
        Property { name: "connectedLineRestriction"; type: "string"; isReadonly: true }
        Property { name: "callingLineRestriction"; type: "string"; isReadonly: true }
        Signal {
            name: "callingLinePresentationChanged"
            Parameter { name: "setting"; type: "string" }
        }
        Signal {
            name: "calledLinePresentationChanged"
            Parameter { name: "setting"; type: "string" }
        }
        Signal {
            name: "callingNamePresentationChanged"
            Parameter { name: "setting"; type: "string" }
        }
        Signal {
            name: "connectedLinePresentationChanged"
            Parameter { name: "setting"; type: "string" }
        }
        Signal {
            name: "connectedLineRestrictionChanged"
            Parameter { name: "setting"; type: "string" }
        }
        Signal {
            name: "callingLineRestrictionChanged"
            Parameter { name: "setting"; type: "string" }
        }
        Signal {
            name: "hideCallerIdChanged"
            Parameter { name: "setting"; type: "string" }
        }
        Signal {
            name: "voiceCallWaitingChanged"
            Parameter { name: "setting"; type: "string" }
        }
        Signal { name: "getPropertiesFailed" }
        Signal {
            name: "hideCallerIdComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "voiceCallWaitingComplete"
            Parameter { name: "success"; type: "bool" }
        }
    }
    Component {
        name: "QOfonoCellBroadcast"
        prototype: "QOfonoObject"
        exports: ["MeeGo.QOfono/OfonoCellBroadcast 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "modemPath"; type: "string" }
        Property { name: "enabled"; type: "bool" }
        Property { name: "topics"; type: "string"; isReadonly: true }
        Signal {
            name: "enabledChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "topicsChanged"
            Parameter { type: "string" }
        }
        Signal {
            name: "incomingBroadcast"
            Parameter { type: "string" }
            Parameter { type: "ushort" }
        }
        Signal {
            name: "emergencyBroadcast"
            Parameter { type: "string" }
            Parameter { type: "QVariantMap" }
        }
        Signal {
            name: "modemPathChanged"
            Parameter { name: "path"; type: "string" }
        }
    }
    Component {
        name: "QOfonoConnectionContext"
        prototype: "QOfonoObject"
        exports: ["MeeGo.QOfono/OfonoContextConnection 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "active"; type: "bool" }
        Property { name: "provisioning"; type: "bool"; isReadonly: true }
        Property { name: "accessPointName"; type: "string" }
        Property { name: "type"; type: "string" }
        Property { name: "authMethod"; type: "string" }
        Property { name: "username"; type: "string" }
        Property { name: "password"; type: "string" }
        Property { name: "protocol"; type: "string" }
        Property { name: "name"; type: "string" }
        Property { name: "messageProxy"; type: "string" }
        Property { name: "messageCenter"; type: "string" }
        Property { name: "settings"; type: "QVariantMap"; isReadonly: true }
        Property { name: "IPv6Settings"; type: "QVariantMap"; isReadonly: true }
        Property { name: "contextPath"; type: "string" }
        Property { name: "modemPath"; type: "string"; isReadonly: true }
        Signal { name: "disconnectRequested" }
        Signal {
            name: "activeChanged"
            Parameter { name: "active"; type: "bool" }
        }
        Signal {
            name: "provisioningChanged"
            Parameter { name: "provisioning"; type: "bool" }
        }
        Signal {
            name: "accessPointNameChanged"
            Parameter { name: "apn"; type: "string" }
        }
        Signal {
            name: "nameChanged"
            Parameter { name: "name"; type: "string" }
        }
        Signal {
            name: "typeChanged"
            Parameter { name: "type"; type: "string" }
        }
        Signal {
            name: "authMethodChanged"
            Parameter { name: "method"; type: "string" }
        }
        Signal {
            name: "usernameChanged"
            Parameter { name: "uname"; type: "string" }
        }
        Signal {
            name: "passwordChanged"
            Parameter { name: "pw"; type: "string" }
        }
        Signal {
            name: "protocolChanged"
            Parameter { name: "proto"; type: "string" }
        }
        Signal {
            name: "messageProxyChanged"
            Parameter { name: "proxy"; type: "string" }
        }
        Signal {
            name: "messageCenterChanged"
            Parameter { name: "msc"; type: "string" }
        }
        Signal {
            name: "settingsChanged"
            Parameter { name: "settingsMap"; type: "QVariantMap" }
        }
        Signal {
            name: "IPv6SettingsChanged"
            Parameter { name: "ipv6SettingsMap"; type: "QVariantMap" }
        }
        Signal {
            name: "contextPathChanged"
            Parameter { name: "contextPath"; type: "string" }
        }
        Signal {
            name: "provisioningFinished"
            Parameter { name: "error"; type: "string" }
        }
        Signal {
            name: "modemPathChanged"
            Parameter { name: "path"; type: "string" }
        }
        Method { name: "disconnect" }
        Method { name: "provision"; type: "bool" }
    }
    Component {
        name: "QOfonoConnectionManager"
        prototype: "QOfonoModemInterface"
        exports: ["MeeGo.QOfono/OfonoConnMan 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "attached"; type: "bool"; isReadonly: true }
        Property { name: "bearer"; type: "string"; isReadonly: true }
        Property { name: "suspended"; type: "bool"; isReadonly: true }
        Property { name: "roamingAllowed"; type: "bool" }
        Property { name: "powered"; type: "bool" }
        Property { name: "contexts"; type: "QStringList"; isReadonly: true }
        Property { name: "filter"; type: "string" }
        Signal {
            name: "attachedChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "bearerChanged"
            Parameter { name: "bearer"; type: "string" }
        }
        Signal {
            name: "suspendedChanged"
            Parameter { name: "suspnd"; type: "bool" }
        }
        Signal {
            name: "roamingAllowedChanged"
            Parameter { name: "roaming"; type: "bool" }
        }
        Signal {
            name: "poweredChanged"
            Parameter { name: "powered"; type: "bool" }
        }
        Signal {
            name: "contextAdded"
            Parameter { name: "path"; type: "string" }
        }
        Signal {
            name: "contextRemoved"
            Parameter { name: "path"; type: "string" }
        }
        Signal {
            name: "contextsChanged"
            Parameter { name: "contexts"; type: "QStringList" }
        }
        Signal {
            name: "filterChanged"
            Parameter { name: "filter"; type: "string" }
        }
        Method { name: "deactivateAll" }
        Method {
            name: "addContext"
            Parameter { name: "type"; type: "string" }
        }
        Method {
            name: "removeContext"
            Parameter { name: "path"; type: "string" }
        }
    }
    Component {
        name: "QOfonoHandsfree"
        prototype: "QObject"
        exports: ["MeeGo.QOfono/OfonoHandsfree 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "modemPath"; type: "string" }
        Property { name: "features"; type: "QStringList"; isReadonly: true }
        Property { name: "inbandRinging"; type: "bool"; isReadonly: true }
        Property { name: "voiceRecognition"; type: "bool" }
        Property { name: "echoCancelingNoiseReduction"; type: "bool" }
        Property { name: "batteryChargeLevel"; type: "uchar"; isReadonly: true }
        Signal {
            name: "voiceRecognitionChanged"
            Parameter { name: "on"; type: "bool" }
        }
        Signal {
            name: "echoCancelingNoiseReductionChanged"
            Parameter { name: "on"; type: "bool" }
        }
        Signal {
            name: "modemPathChanged"
            Parameter { name: "path"; type: "string" }
        }
    }
    Component {
        name: "QOfonoHandsfreeAudioAgent"
        prototype: "QObject"
        exports: ["MeeGo.QOfono/OfonoHandsfreeAudioAgent 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "agentPath"; type: "string" }
        Signal {
            name: "newConnection"
            Parameter { name: "card"; type: "string" }
            Parameter { name: "sco"; type: "QDBusUnixFileDescriptor" }
            Parameter { name: "codec"; type: "QByteArray" }
        }
        Signal { name: "release" }
    }
    Component {
        name: "QOfonoHandsfreeAudioCard"
        prototype: "QObject"
        exports: ["MeeGo.QOfono/OfonoHandsfreeAudioCard 0.2"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Error"
            values: {
                "NoError": 0,
                "NotImplementedError": 1,
                "InProgressError": 2,
                "InvalidArgumentsError": 3,
                "InvalidFormatError": 4,
                "FailedError": 5,
                "UnknownError": 6
            }
        }
        Property { name: "modemPath"; type: "string" }
        Property { name: "remoteAddress"; type: "string"; isReadonly: true }
        Property { name: "localAddress"; type: "string"; isReadonly: true }
        Signal {
            name: "modemPathChanged"
            Parameter { name: "path"; type: "string" }
        }
        Signal {
            name: "connectAudioComplete"
            Parameter { name: "error"; type: "QOfonoHandsfreeAudioCard::Error" }
            Parameter { name: "errorString"; type: "string" }
        }
        Method { name: "connectAudio" }
    }
    Component {
        name: "QOfonoHandsfreeAudioManager"
        prototype: "QObject"
        exports: ["MeeGo.QOfono/OfonoHandsfreeAudioManager 0.2"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "CodecType"
            values: {
                "CVSD": 1,
                "mSBC": 2
            }
        }
        Enum {
            name: "CodecTypeFlags"
            values: {
                "CVSD": 1,
                "mSBC": 2
            }
        }
        Property { name: "modemPath"; type: "string" }
        Signal {
            name: "cardAdded"
            Parameter { name: "card"; type: "string" }
        }
        Signal {
            name: "cardRemoved"
            Parameter { name: "card"; type: "string" }
        }
        Signal {
            name: "modemPathChanged"
            Parameter { name: "path"; type: "string" }
        }
        Method { name: "cards"; type: "QStringList" }
        Method {
            name: "registerAgent"
            Parameter { name: "path"; type: "string" }
            Parameter { name: "codecs"; type: "CodecTypeFlags" }
        }
    }
    Component {
        name: "QOfonoLocationReporting"
        prototype: "QObject"
        exports: ["MeeGo.QOfono/OfonoLocationReporting 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "modemPath"; type: "string" }
        Property { name: "type"; type: "string"; isReadonly: true }
        Property { name: "enabled"; type: "bool"; isReadonly: true }
        Signal {
            name: "modemPathChanged"
            Parameter { name: "path"; type: "string" }
        }
        Method { name: "release" }
        Method { name: "request"; type: "int" }
    }
    Component {
        name: "QOfonoManager"
        prototype: "QObject"
        exports: ["MeeGo.QOfono/OfonoManager 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "modems"; type: "QStringList"; isReadonly: true }
        Property { name: "defaultModem"; type: "string"; isReadonly: true }
        Property { name: "available"; type: "bool"; isReadonly: true }
        Signal {
            name: "modemAdded"
            Parameter { name: "modem"; type: "string" }
        }
        Signal {
            name: "modemRemoved"
            Parameter { name: "modem"; type: "string" }
        }
        Signal {
            name: "availableChanged"
            Parameter { name: "available"; type: "bool" }
        }
        Signal {
            name: "modemsChanged"
            Parameter { name: "modems"; type: "QStringList" }
        }
        Signal {
            name: "defaultModemChanged"
            Parameter { name: "modem"; type: "string" }
        }
    }
    Component {
        name: "QOfonoMessage"
        prototype: "QOfonoObject"
        exports: ["MeeGo.QOfono/OfonoMessage 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "messagePath"; type: "string" }
        Property { name: "state"; type: "string"; isReadonly: true }
        Signal {
            name: "stateChanged"
            Parameter { name: "state"; type: "string" }
        }
        Signal {
            name: "messagePathChanged"
            Parameter { name: "path"; type: "string" }
        }
        Method { name: "cancel" }
    }
    Component {
        name: "QOfonoMessageManager"
        prototype: "QOfonoModemInterface"
        exports: ["MeeGo.QOfono/OfonoMessageManager 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "serviceCenterAddress"; type: "string" }
        Property { name: "useDeliveryReports"; type: "bool" }
        Property { name: "bearer"; type: "string" }
        Property { name: "alphabet"; type: "string" }
        Signal {
            name: "serviceCenterAddressChanged"
            Parameter { name: "address"; type: "string" }
        }
        Signal {
            name: "useDeliveryReportsChanged"
            Parameter { name: "useDeliveryReports"; type: "bool" }
        }
        Signal {
            name: "bearerChanged"
            Parameter { name: "bearer"; type: "string" }
        }
        Signal {
            name: "alphabetChanged"
            Parameter { name: "alphabet"; type: "string" }
        }
        Signal {
            name: "immediateMessage"
            Parameter { name: "message"; type: "string" }
            Parameter { name: "info"; type: "QVariantMap" }
        }
        Signal {
            name: "incomingMessage"
            Parameter { name: "message"; type: "string" }
            Parameter { name: "info"; type: "QVariantMap" }
        }
        Signal {
            name: "messageAdded"
            Parameter { name: "message"; type: "string" }
        }
        Signal {
            name: "messageRemoved"
            Parameter { name: "message"; type: "string" }
        }
        Signal { name: "messagesFinished" }
        Signal {
            name: "sendMessageComplete"
            Parameter { name: "success"; type: "bool" }
            Parameter { name: "path"; type: "string" }
        }
        Signal {
            name: "setServiceCenterAddressComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "setUseDeliveryReportsComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "setBearerComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "setAlphabetComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Method {
            name: "sendMessage"
            Parameter { name: "numberTo"; type: "string" }
            Parameter { name: "message"; type: "string" }
        }
        Method { name: "messages"; type: "QStringList" }
    }
    Component {
        name: "QOfonoMessageWaiting"
        prototype: "QOfonoModemInterface"
        exports: ["MeeGo.QOfono/OfonoMessageWaiting 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "voicemailWaiting"; type: "bool"; isReadonly: true }
        Property { name: "voicemailMessageCount"; type: "int"; isReadonly: true }
        Property { name: "voicemailMailboxNumber"; type: "string" }
        Signal {
            name: "voicemailWaitingChanged"
            Parameter { name: "waiting"; type: "bool" }
        }
        Signal {
            name: "voicemailMessageCountChanged"
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "voicemailMailboxNumberChanged"
            Parameter { name: "mailboxnumber"; type: "string" }
        }
        Signal {
            name: "voicemailMailboxComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Signal { name: "getPropertiesFailed" }
    }
    Component {
        name: "QOfonoModem"
        prototype: "QOfonoObject"
        exports: ["MeeGo.QOfono/OfonoModem 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "powered"; type: "bool" }
        Property { name: "online"; type: "bool" }
        Property { name: "lockdown"; type: "bool" }
        Property { name: "emergency"; type: "bool"; isReadonly: true }
        Property { name: "name"; type: "string"; isReadonly: true }
        Property { name: "manufacturer"; type: "string"; isReadonly: true }
        Property { name: "model"; type: "string"; isReadonly: true }
        Property { name: "revision"; type: "string"; isReadonly: true }
        Property { name: "serial"; type: "string"; isReadonly: true }
        Property { name: "type"; type: "string"; isReadonly: true }
        Property { name: "features"; type: "QStringList"; isReadonly: true }
        Property { name: "interfaces"; type: "QStringList"; isReadonly: true }
        Property { name: "modemPath"; type: "string" }
        Signal {
            name: "poweredChanged"
            Parameter { name: "powered"; type: "bool" }
        }
        Signal {
            name: "onlineChanged"
            Parameter { name: "online"; type: "bool" }
        }
        Signal {
            name: "lockdownChanged"
            Parameter { name: "lockdown"; type: "bool" }
        }
        Signal {
            name: "emergencyChanged"
            Parameter { name: "emergency"; type: "bool" }
        }
        Signal {
            name: "nameChanged"
            Parameter { name: "name"; type: "string" }
        }
        Signal {
            name: "manufacturerChanged"
            Parameter { name: "manufacturer"; type: "string" }
        }
        Signal {
            name: "modelChanged"
            Parameter { name: "model"; type: "string" }
        }
        Signal {
            name: "revisionChanged"
            Parameter { name: "revision"; type: "string" }
        }
        Signal {
            name: "serialChanged"
            Parameter { name: "serial"; type: "string" }
        }
        Signal {
            name: "typeChanged"
            Parameter { name: "type"; type: "string" }
        }
        Signal {
            name: "featuresChanged"
            Parameter { name: "features"; type: "QStringList" }
        }
        Signal {
            name: "interfacesChanged"
            Parameter { name: "interfaces"; type: "QStringList" }
        }
        Signal {
            name: "modemPathChanged"
            Parameter { name: "path"; type: "string" }
        }
    }
    Component {
        name: "QOfonoModemInterface"
        prototype: "QOfonoObject"
        Property { name: "modemPath"; type: "string" }
        Property { name: "ready"; type: "bool"; isReadonly: true }
        Signal {
            name: "modemPathChanged"
            Parameter { name: "path"; type: "string" }
        }
    }
    Component {
        name: "QOfonoModemInterface2"
        prototype: "QObject"
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "modemPath"; type: "string" }
        Signal {
            name: "modemPathChanged"
            Parameter { name: "path"; type: "string" }
        }
        Signal {
            name: "validChanged"
            Parameter { name: "valid"; type: "bool" }
        }
    }
    Component {
        name: "QOfonoNetworkOperator"
        prototype: "QOfonoObject"
        exports: ["MeeGo.QOfono/OfonoNetworkOperator 0.2"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Error"
            values: {
                "NoError": 0,
                "NotImplementedError": 1,
                "InProgressError": 2,
                "InvalidArgumentsError": 3,
                "InvalidFormatError": 4,
                "FailedError": 5,
                "UnknownError": 6
            }
        }
        Property { name: "operatorPath"; type: "string" }
        Property { name: "name"; type: "string"; isReadonly: true }
        Property { name: "status"; type: "string"; isReadonly: true }
        Property { name: "mcc"; type: "string"; isReadonly: true }
        Property { name: "mnc"; type: "string"; isReadonly: true }
        Property { name: "technologies"; type: "QStringList"; isReadonly: true }
        Property { name: "additionalInfo"; type: "string"; isReadonly: true }
        Property { name: "registering"; type: "bool"; isReadonly: true }
        Signal {
            name: "nameChanged"
            Parameter { name: "name"; type: "string" }
        }
        Signal {
            name: "statusChanged"
            Parameter { name: "status"; type: "string" }
        }
        Signal {
            name: "mccChanged"
            Parameter { name: "mcc"; type: "string" }
        }
        Signal {
            name: "mncChanged"
            Parameter { name: "mnc"; type: "string" }
        }
        Signal {
            name: "technologiesChanged"
            Parameter { name: "technologies"; type: "QStringList" }
        }
        Signal {
            name: "additionalInfoChanged"
            Parameter { name: "additionalInfo"; type: "string" }
        }
        Signal {
            name: "operatorPathChanged"
            Parameter { name: "path"; type: "string" }
        }
        Signal {
            name: "registeringChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "registerComplete"
            Parameter { name: "error"; type: "QOfonoNetworkOperator::Error" }
            Parameter { name: "errorString"; type: "string" }
        }
        Method { name: "registerOperator" }
    }
    Component {
        name: "QOfonoNetworkOperatorListModel"
        prototype: "QAbstractListModel"
        exports: ["MeeGo.QOfono/OfonoNetworkOperatorListModel 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "modemPath"; type: "string" }
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "count"; type: "int"; isReadonly: true }
        Signal {
            name: "modemPathChanged"
            Parameter { name: "value"; type: "string" }
        }
        Signal {
            name: "validChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "countChanged"
            Parameter { name: "value"; type: "int" }
        }
    }
    Component {
        name: "QOfonoNetworkRegistration"
        prototype: "QOfonoModemInterface"
        exports: ["MeeGo.QOfono/OfonoNetworkRegistration 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "scanning"; type: "bool"; isReadonly: true }
        Property { name: "mode"; type: "string"; isReadonly: true }
        Property { name: "status"; type: "string"; isReadonly: true }
        Property { name: "locationAreaCode"; type: "uint"; isReadonly: true }
        Property { name: "cellId"; type: "uint"; isReadonly: true }
        Property { name: "mcc"; type: "string"; isReadonly: true }
        Property { name: "mnc"; type: "string"; isReadonly: true }
        Property { name: "technology"; type: "string"; isReadonly: true }
        Property { name: "name"; type: "string"; isReadonly: true }
        Property { name: "strength"; type: "uint"; isReadonly: true }
        Property { name: "baseStation"; type: "string"; isReadonly: true }
        Property { name: "networkOperators"; type: "QStringList"; isReadonly: true }
        Property { name: "currentOperatorPath"; type: "string"; isReadonly: true }
        Signal {
            name: "modeChanged"
            Parameter { name: "mode"; type: "string" }
        }
        Signal {
            name: "statusChanged"
            Parameter { name: "status"; type: "string" }
        }
        Signal {
            name: "locationAreaCodeChanged"
            Parameter { name: "locationAreaCode"; type: "uint" }
        }
        Signal {
            name: "cellIdChanged"
            Parameter { name: "cellId"; type: "uint" }
        }
        Signal {
            name: "mccChanged"
            Parameter { name: "mcc"; type: "string" }
        }
        Signal {
            name: "mncChanged"
            Parameter { name: "mnc"; type: "string" }
        }
        Signal {
            name: "technologyChanged"
            Parameter { name: "technology"; type: "string" }
        }
        Signal {
            name: "nameChanged"
            Parameter { name: "name"; type: "string" }
        }
        Signal {
            name: "strengthChanged"
            Parameter { name: "strength"; type: "uint" }
        }
        Signal {
            name: "baseStationChanged"
            Parameter { name: "baseStation"; type: "string" }
        }
        Signal {
            name: "networkOperatorsChanged"
            Parameter { name: "networkOperators"; type: "QStringList" }
        }
        Signal {
            name: "currentOperatorPathChanged"
            Parameter { type: "string" }
        }
        Signal { name: "scanFinished" }
        Signal {
            name: "scanError"
            Parameter { name: "message"; type: "string" }
        }
        Signal {
            name: "scanningChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal { name: "registrationFinished" }
        Signal {
            name: "registrationError"
            Parameter { name: "errorMessage"; type: "string" }
        }
        Method { name: "registration" }
        Method { name: "scan" }
    }
    Component {
        name: "QOfonoObject"
        prototype: "QObject"
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Signal {
            name: "validChanged"
            Parameter { name: "valid"; type: "bool" }
        }
        Signal { name: "setPropertyFinished" }
        Signal {
            name: "reportError"
            Parameter { name: "errorString"; type: "string" }
        }
    }
    Component {
        name: "QOfonoPhonebook"
        prototype: "QOfonoModemInterface2"
        exports: ["MeeGo.QOfono/OfonoPhonebook 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "importing"; type: "bool"; isReadonly: true }
        Signal {
            name: "importReady"
            Parameter { name: "vcardData"; type: "string" }
        }
        Signal { name: "importFailed" }
        Method { name: "beginImport" }
    }
    Component {
        name: "QOfonoPositioningRequestAgent"
        prototype: "QObject"
        exports: ["MeeGo.QOfono/OfonoPositioningRequestAgent 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "agentPath"; type: "string" }
        Signal {
            name: "agentPathChanged"
            Parameter { name: "path"; type: "string" }
        }
        Signal {
            name: "request"
            Parameter { name: "xmlElement"; type: "string" }
        }
        Signal { name: "positioningRequest" }
        Signal { name: "release" }
    }
    Component {
        name: "QOfonoRadioSettings"
        prototype: "QOfonoModemInterface"
        exports: ["MeeGo.QOfono/OfonoRadioSettings 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "modemPath"; type: "string" }
        Property { name: "technologyPreference"; type: "string" }
        Property { name: "gsmBand"; type: "string" }
        Property { name: "umtsBand"; type: "string" }
        Property { name: "fastDormancy"; type: "bool" }
        Signal {
            name: "technologyPreferenceChanged"
            Parameter { name: "preference"; type: "string" }
        }
        Signal {
            name: "gsmBandChanged"
            Parameter { name: "gsmBand"; type: "string" }
        }
        Signal {
            name: "umtsBandChanged"
            Parameter { name: "umtsBand"; type: "string" }
        }
        Signal {
            name: "fastDormancyChanged"
            Parameter { name: "fastDormancy"; type: "bool" }
        }
        Signal {
            name: "modemPathChanged"
            Parameter { name: "path"; type: "string" }
        }
    }
    Component {
        name: "QOfonoSimManager"
        prototype: "QOfonoModemInterface"
        exports: ["MeeGo.QOfono/OfonoSimManager 0.2"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Error"
            values: {
                "NoError": 0,
                "NotImplementedError": 1,
                "InProgressError": 2,
                "InvalidArgumentsError": 3,
                "InvalidFormatError": 4,
                "FailedError": 5,
                "UnknownError": 6
            }
        }
        Enum {
            name: "PinType"
            values: {
                "NoPin": 0,
                "SimPin": 1,
                "SimPin2": 2,
                "PhoneToSimPin": 3,
                "PhoneToFirstSimPin": 4,
                "NetworkPersonalizationPin": 5,
                "NetworkSubsetPersonalizationPin": 6,
                "ServiceProviderPersonalizationPin": 7,
                "CorporatePersonalizationPin": 8,
                "SimPuk": 9,
                "SimPuk2": 10,
                "PhoneToFirstSimPuk": 11,
                "NetworkPersonalizationPuk": 12,
                "NetworkSubsetPersonalizationPuk": 13,
                "CorporatePersonalizationPuk": 14
            }
        }
        Property { name: "present"; type: "bool"; isReadonly: true }
        Property { name: "subscriberIdentity"; type: "string"; isReadonly: true }
        Property { name: "mobileCountryCode"; type: "string"; isReadonly: true }
        Property { name: "mobileNetworkCode"; type: "string"; isReadonly: true }
        Property { name: "subscriberNumbers"; type: "QStringList" }
        Property { name: "serviceNumbers"; type: "QVariantMap"; isReadonly: true }
        Property { name: "pinRequired"; type: "PinType"; isReadonly: true }
        Property { name: "lockedPins"; type: "QVariantList"; isReadonly: true }
        Property { name: "cardIdentifier"; type: "string"; isReadonly: true }
        Property { name: "preferredLanguages"; type: "QStringList"; isReadonly: true }
        Property { name: "pinRetries"; type: "QVariantMap"; isReadonly: true }
        Property { name: "fixedDialing"; type: "bool"; isReadonly: true }
        Property { name: "barredDialing"; type: "bool"; isReadonly: true }
        Signal {
            name: "presenceChanged"
            Parameter { name: "ispresent"; type: "bool" }
        }
        Signal {
            name: "subscriberIdentityChanged"
            Parameter { name: "imsi"; type: "string" }
        }
        Signal {
            name: "mobileCountryCodeChanged"
            Parameter { name: "mcc"; type: "string" }
        }
        Signal {
            name: "mobileNetworkCodeChanged"
            Parameter { name: "mnc"; type: "string" }
        }
        Signal {
            name: "subscriberNumbersChanged"
            Parameter { name: "msisdns"; type: "QStringList" }
        }
        Signal {
            name: "serviceNumbersChanged"
            Parameter { name: "sdns"; type: "QVariantMap" }
        }
        Signal {
            name: "pinRequiredChanged"
            Parameter { name: "pinType"; type: "int" }
        }
        Signal {
            name: "lockedPinsChanged"
            Parameter { name: "pins"; type: "QVariantList" }
        }
        Signal {
            name: "cardIdentifierChanged"
            Parameter { name: "iccid"; type: "string" }
        }
        Signal {
            name: "preferredLanguagesChanged"
            Parameter { name: "languages"; type: "QStringList" }
        }
        Signal {
            name: "pinRetriesChanged"
            Parameter { name: "pinRetries"; type: "QVariantMap" }
        }
        Signal {
            name: "fixedDialingChanged"
            Parameter { name: "fixedDialing"; type: "bool" }
        }
        Signal {
            name: "barredDialingChanged"
            Parameter { name: "barredDialing"; type: "bool" }
        }
        Signal {
            name: "enterPinComplete"
            Parameter { name: "error"; type: "QOfonoSimManager::Error" }
            Parameter { name: "errorString"; type: "string" }
        }
        Signal {
            name: "resetPinComplete"
            Parameter { name: "error"; type: "QOfonoSimManager::Error" }
            Parameter { name: "errorString"; type: "string" }
        }
        Signal {
            name: "changePinComplete"
            Parameter { name: "error"; type: "QOfonoSimManager::Error" }
            Parameter { name: "errorString"; type: "string" }
        }
        Signal {
            name: "lockPinComplete"
            Parameter { name: "error"; type: "QOfonoSimManager::Error" }
            Parameter { name: "errorString"; type: "string" }
        }
        Signal {
            name: "unlockPinComplete"
            Parameter { name: "error"; type: "QOfonoSimManager::Error" }
            Parameter { name: "errorString"; type: "string" }
        }
        Method {
            name: "changePin"
            Parameter { name: "pinType"; type: "QOfonoSimManager::PinType" }
            Parameter { name: "oldpin"; type: "string" }
            Parameter { name: "newpin"; type: "string" }
        }
        Method {
            name: "enterPin"
            Parameter { name: "pinType"; type: "QOfonoSimManager::PinType" }
            Parameter { name: "pin"; type: "string" }
        }
        Method {
            name: "resetPin"
            Parameter { name: "pinType"; type: "QOfonoSimManager::PinType" }
            Parameter { name: "puk"; type: "string" }
            Parameter { name: "newpin"; type: "string" }
        }
        Method {
            name: "lockPin"
            Parameter { name: "pinType"; type: "QOfonoSimManager::PinType" }
            Parameter { name: "pin"; type: "string" }
        }
        Method {
            name: "unlockPin"
            Parameter { name: "pinType"; type: "QOfonoSimManager::PinType" }
            Parameter { name: "pin"; type: "string" }
        }
        Method {
            name: "getIcon"
            type: "QByteArray"
            Parameter { name: "id"; type: "uchar" }
        }
        Method {
            name: "setSubscriberNumbers"
            Parameter { name: "numbers"; type: "QStringList" }
        }
        Method {
            name: "minimumPinLength"
            type: "int"
            Parameter { name: "pinType"; type: "QOfonoSimManager::PinType" }
        }
        Method {
            name: "maximumPinLength"
            type: "int"
            Parameter { name: "pinType"; type: "QOfonoSimManager::PinType" }
        }
        Method {
            name: "pinTypeToString"
            type: "string"
            Parameter { name: "pinType"; type: "QOfonoSimManager::PinType" }
        }
        Method {
            name: "pinTypeFromString"
            type: "int"
            Parameter { name: "s"; type: "string" }
        }
        Method {
            name: "isPukType"
            type: "bool"
            Parameter { name: "pinType"; type: "QOfonoSimManager::PinType" }
        }
        Method {
            name: "pukToPin"
            type: "int"
            Parameter { name: "puk"; type: "QOfonoSimManager::PinType" }
        }
    }
    Component {
        name: "QOfonoSmartMessaging"
        prototype: "QOfonoModemInterface2"
        exports: ["MeeGo.QOfono/OfonoSmartMessaging 0.2"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "registered"
            Parameter { name: "objectPath"; type: "string" }
        }
        Signal {
            name: "unregistered"
            Parameter { name: "objectPath"; type: "string" }
        }
        Signal {
            name: "registerFailed"
            Parameter { name: "objectPath"; type: "string" }
            Parameter { name: "error"; type: "string" }
        }
        Signal {
            name: "unregisterFailed"
            Parameter { name: "objectPath"; type: "string" }
            Parameter { name: "error"; type: "string" }
        }
        Method {
            name: "sendAppointment"
            type: "QDBusObjectPath"
            Parameter { name: "toPhoneNumber"; type: "string" }
            Parameter { name: "appointment"; type: "QByteArray" }
        }
        Method {
            name: "sendBusinessCard"
            type: "QDBusObjectPath"
            Parameter { name: "toPhoneNumber"; type: "string" }
            Parameter { name: "card"; type: "QByteArray" }
        }
        Method {
            name: "registerAgent"
            Parameter { name: "objectPath"; type: "string" }
        }
        Method {
            name: "unregisterAgent"
            Parameter { name: "objectPath"; type: "string" }
        }
    }
    Component {
        name: "QOfonoSmartMessagingAgent"
        prototype: "QObject"
        exports: ["MeeGo.QOfono/OfonoSmartMessagingAgent 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "agentPath"; type: "string" }
        Signal {
            name: "agentPathChanged"
            Parameter { name: "path"; type: "string" }
        }
        Signal {
            name: "receiveAppointment"
            Parameter { name: "appointment"; type: "QByteArray" }
            Parameter { name: "info"; type: "QVariantMap" }
        }
        Signal {
            name: "receiveBusinessCard"
            Parameter { name: "card"; type: "QByteArray" }
            Parameter { name: "info"; type: "QVariantMap" }
        }
        Signal { name: "release" }
    }
    Component {
        name: "QOfonoSupplementaryServices"
        prototype: "QOfonoModemInterface"
        exports: ["MeeGo.QOfono/OfonoSupplementaryServices 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "state"; type: "string"; isReadonly: true }
        Signal {
            name: "notificationReceived"
            Parameter { name: "message"; type: "string" }
        }
        Signal {
            name: "requestReceived"
            Parameter { name: "message"; type: "string" }
        }
        Signal {
            name: "ussdResponse"
            Parameter { name: "response"; type: "string" }
        }
        Signal {
            name: "callBarringResponse"
            Parameter { name: "ssOp"; type: "string" }
            Parameter { name: "cbService"; type: "string" }
            Parameter { name: "cbMap"; type: "QVariantMap" }
        }
        Signal {
            name: "callForwardingResponse"
            Parameter { name: "ssOp"; type: "string" }
            Parameter { name: "cfService"; type: "string" }
            Parameter { name: "cfMap"; type: "QVariantMap" }
        }
        Signal {
            name: "callWaitingResponse"
            Parameter { name: "ssOp"; type: "string" }
            Parameter { name: "cwMap"; type: "QVariantMap" }
        }
        Signal {
            name: "callingLinePresentationResponse"
            Parameter { name: "ssOp"; type: "string" }
            Parameter { name: "status"; type: "string" }
        }
        Signal {
            name: "connectedLinePresentationResponse"
            Parameter { name: "ssOp"; type: "string" }
            Parameter { name: "status"; type: "string" }
        }
        Signal {
            name: "callingLineRestrictionResponse"
            Parameter { name: "ssOp"; type: "string" }
            Parameter { name: "status"; type: "string" }
        }
        Signal {
            name: "connectedLineRestrictionResponse"
            Parameter { name: "ssOp"; type: "string" }
            Parameter { name: "status"; type: "string" }
        }
        Signal { name: "initiateFailed" }
        Signal {
            name: "respondComplete"
            Parameter { name: "success"; type: "bool" }
            Parameter { name: "message"; type: "string" }
        }
        Signal {
            name: "cancelComplete"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "stateChanged"
            Parameter { name: "state"; type: "string" }
        }
        Signal {
            name: "modemPathChanged"
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "initiate"
            Parameter { name: "command"; type: "string" }
        }
        Method {
            name: "respond"
            Parameter { name: "reply"; type: "string" }
        }
        Method { name: "cancel" }
    }
    Component {
        name: "QOfonoTextTelephony"
        prototype: "QOfonoModemInterface"
        exports: ["MeeGo.QOfono/OfonoTextTelephony 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "modemPath"; type: "string" }
        Property { name: "ttyEnabled"; type: "bool" }
        Signal {
            name: "ttyEnabledChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "modemPathChanged"
            Parameter { name: "path"; type: "string" }
        }
    }
    Component {
        name: "QOfonoVoiceCall"
        prototype: "QOfonoObject"
        exports: ["MeeGo.QOfono/OfonoVoiceCall 0.2"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Error"
            values: {
                "NoError": 0,
                "NotImplementedError": 1,
                "InProgressError": 2,
                "InvalidArgumentsError": 3,
                "InvalidFormatError": 4,
                "FailedError": 5,
                "UnknownError": 6
            }
        }
        Property { name: "voiceCallPath"; type: "string" }
        Property { name: "lineIdentification"; type: "string"; isReadonly: true }
        Property { name: "incomingLine"; type: "string"; isReadonly: true }
        Property { name: "name"; type: "string"; isReadonly: true }
        Property { name: "state"; type: "string"; isReadonly: true }
        Property { name: "startTime"; type: "string"; isReadonly: true }
        Property { name: "information"; type: "string"; isReadonly: true }
        Property { name: "multiparty"; type: "bool"; isReadonly: true }
        Property { name: "emergency"; type: "bool"; isReadonly: true }
        Property { name: "remoteHeld"; type: "bool"; isReadonly: true }
        Property { name: "icon"; type: "uchar"; isReadonly: true }
        Signal {
            name: "lineIdentificationChanged"
            Parameter { name: "name"; type: "string" }
        }
        Signal {
            name: "nameChanged"
            Parameter { name: "name"; type: "string" }
        }
        Signal {
            name: "stateChanged"
            Parameter { name: "state"; type: "string" }
        }
        Signal {
            name: "startTimeChanged"
            Parameter { name: "time"; type: "string" }
        }
        Signal {
            name: "informationChanged"
            Parameter { name: "mcc"; type: "string" }
        }
        Signal {
            name: "incomingLineChanged"
            Parameter { name: "line"; type: "string" }
        }
        Signal {
            name: "disconnectReason"
            Parameter { name: "reason"; type: "string" }
        }
        Signal {
            name: "multipartyChanged"
            Parameter { name: "multiparty"; type: "bool" }
        }
        Signal {
            name: "iconChanged"
            Parameter { name: "icon"; type: "uchar" }
        }
        Signal {
            name: "emergencyChanged"
            Parameter { name: "emergency"; type: "bool" }
        }
        Signal {
            name: "remoteHeldChanged"
            Parameter { name: "remoteHeld"; type: "bool" }
        }
        Signal {
            name: "remoteMultipartyChanged"
            Parameter { name: "remoteMultiparty"; type: "bool" }
        }
        Signal {
            name: "voiceCallPathChanged"
            Parameter { name: "path"; type: "string" }
        }
        Signal {
            name: "answerComplete"
            Parameter { name: "error"; type: "QOfonoVoiceCall::Error" }
            Parameter { name: "errorString"; type: "string" }
        }
        Signal {
            name: "hangupComplete"
            Parameter { name: "error"; type: "QOfonoVoiceCall::Error" }
            Parameter { name: "errorString"; type: "string" }
        }
        Signal {
            name: "deflectComplete"
            Parameter { name: "error"; type: "QOfonoVoiceCall::Error" }
            Parameter { name: "errorString"; type: "string" }
        }
        Method { name: "answer" }
        Method { name: "hangup" }
        Method {
            name: "deflect"
            Parameter { name: "number"; type: "string" }
        }
    }
    Component {
        name: "QOfonoVoiceCallManager"
        prototype: "QOfonoModemInterface"
        exports: ["MeeGo.QOfono/OfonoVoiceCallManager 0.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "emergencyNumbers"; type: "QStringList"; isReadonly: true }
        Property { name: "errorMessage"; type: "string"; isReadonly: true }
        Signal {
            name: "emergencyNumbersChanged"
            Parameter { name: "numbers"; type: "QStringList" }
        }
        Signal {
            name: "callAdded"
            Parameter { name: "call"; type: "string" }
        }
        Signal {
            name: "callRemoved"
            Parameter { name: "call"; type: "string" }
        }
        Signal {
            name: "dialComplete"
            Parameter { name: "status"; type: "bool" }
        }
        Signal {
            name: "hangupAllComplete"
            Parameter { name: "status"; type: "bool" }
        }
        Signal {
            name: "sendTonesComplete"
            Parameter { name: "status"; type: "bool" }
        }
        Signal {
            name: "transferComplete"
            Parameter { name: "status"; type: "bool" }
        }
        Signal {
            name: "swapCallsComplete"
            Parameter { name: "status"; type: "bool" }
        }
        Signal {
            name: "releaseAndAnswerComplete"
            Parameter { name: "status"; type: "bool" }
        }
        Signal {
            name: "holdAndAnswerComplete"
            Parameter { name: "status"; type: "bool" }
        }
        Signal {
            name: "privateChatComplete"
            Parameter { name: "status"; type: "bool" }
            Parameter { name: "calls"; type: "QStringList" }
        }
        Signal {
            name: "createMultipartyComplete"
            Parameter { name: "status"; type: "bool" }
            Parameter { name: "calls"; type: "QStringList" }
        }
        Signal {
            name: "hangupMultipartyComplete"
            Parameter { name: "status"; type: "bool" }
        }
        Signal {
            name: "barringActive"
            Parameter { name: "type"; type: "string" }
        }
        Signal {
            name: "forwarded"
            Parameter { name: "type"; type: "string" }
        }
        Method {
            name: "dial"
            Parameter { name: "number"; type: "string" }
            Parameter { name: "calleridHide"; type: "string" }
        }
        Method { name: "hangupAll" }
        Method {
            name: "sendTones"
            Parameter { name: "tonestring"; type: "string" }
        }
        Method { name: "transfer" }
        Method { name: "swapCalls" }
        Method { name: "releaseAndAnswer" }
        Method { name: "holdAndAnswer" }
        Method {
            name: "privateChat"
            Parameter { name: "path"; type: "string" }
        }
        Method { name: "createMultiparty" }
        Method { name: "hangupMultiparty" }
        Method { name: "getCalls"; type: "QStringList" }
    }
}
