import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable -noinstantiate -dependencies /home/nemo/qmlexport/empty.json Nemo.Ssu 1.0'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "DeclarativeSsuDeviceInfo"
        prototype: "QObject"
        exports: ["Nemo.Ssu/DeviceInfo 1.1"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Enum {
            name: "DisplayType"
            values: {
                "DeviceManufacturer": 0,
                "DeviceModel": 1,
                "DeviceDesignation": 2
            }
        }
        Method { name: "deviceFamily"; type: "string" }
        Method {
            name: "deviceVariant"
            type: "string"
            Parameter { name: "fallback"; type: "bool" }
        }
        Method { name: "deviceVariant"; type: "string" }
        Method { name: "deviceModel"; type: "string" }
        Method {
            name: "displayName"
            type: "string"
            Parameter { name: "type"; type: "int" }
        }
    }
    Component {
        name: "DeclarativeSsuFeatureModel"
        prototype: "SsuFeatureModel"
        exports: ["Nemo.Ssu/FeatureModel 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "get"
            type: "QJSValue"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "Ssu"
        prototype: "QObject"
        exports: ["Nemo.Ssu/Ssu 1.1"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "DeviceModeFlags"
            values: {
                "DisableRepoManager": 1,
                "RndMode": 2,
                "ReleaseMode": 4,
                "LenientMode": 8,
                "UpdateMode": 16,
                "AppInstallMode": 32
            }
        }
        Property { name: "registered"; type: "bool"; isReadonly: true }
        Property { name: "deviceMode"; type: "DeviceModeFlags"; isReadonly: true }
        Property { name: "domain"; type: "string"; isReadonly: true }
        Signal { name: "done" }
        Signal { name: "registrationStatusChanged" }
        Signal { name: "credentialsChanged" }
        Method {
            name: "sendRegistration"
            Parameter { name: "username"; type: "string" }
            Parameter { name: "password"; type: "string" }
        }
        Method {
            name: "updateCredentials"
            Parameter { name: "force"; type: "bool" }
        }
        Method { name: "updateCredentials" }
        Method { name: "updateStoreCredentials" }
        Method { name: "error"; type: "bool" }
        Method { name: "lastError"; type: "string" }
        Method { name: "unregister" }
        Method { name: "flavour"; type: "string" }
        Method { name: "deviceMode"; type: "DeviceModeFlags" }
        Method { name: "domain"; type: "string" }
        Method { name: "brand"; type: "string" }
        Method { name: "isRegistered"; type: "bool" }
        Method { name: "lastCredentialsUpdate"; type: "QDateTime" }
        Method {
            name: "release"
            type: "string"
            Parameter { name: "rnd"; type: "bool" }
        }
        Method { name: "release"; type: "string" }
        Method {
            name: "setDeviceMode"
            Parameter { name: "mode"; type: "DeviceModeFlags" }
            Parameter { name: "editMode"; type: "EditMode" }
        }
        Method {
            name: "setDeviceMode"
            Parameter { name: "mode"; type: "DeviceModeFlags" }
        }
        Method {
            name: "setFlavour"
            Parameter { name: "flavour"; type: "string" }
        }
        Method {
            name: "setRelease"
            Parameter { name: "release"; type: "string" }
            Parameter { name: "rnd"; type: "bool" }
        }
        Method {
            name: "setRelease"
            Parameter { name: "release"; type: "string" }
        }
        Method {
            name: "setDomain"
            Parameter { name: "domain"; type: "string" }
        }
        Method { name: "useSslVerify"; type: "bool" }
        Method { name: "listDomains"; type: "QStringList" }
        Method {
            name: "setDomainConfig"
            Parameter { name: "domain"; type: "string" }
            Parameter { name: "config"; type: "QVariantMap" }
        }
        Method {
            name: "getDomainConfig"
            type: "QVariantMap"
            Parameter { name: "domain"; type: "string" }
        }
    }
    Component {
        name: "SsuFeatureModel"
        prototype: "QAbstractListModel"
        Property { name: "count"; type: "int"; isReadonly: true }
        Method { name: "reload" }
        Method { name: "count"; type: "int" }
    }
}
