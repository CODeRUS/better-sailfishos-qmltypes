import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable -noinstantiate -dependencies dependencies/empty.json Nemo.Mce 1.0'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "QMceBatteryLevel"
        prototype: "QObject"
        exports: ["Nemo.Mce/MceBatteryLevel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "percent"; type: "int"; isReadonly: true }
    }
    Component {
        name: "QMceBatteryState"
        prototype: "QObject"
        exports: ["Nemo.Mce/MceBatteryState 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "State"
            values: {
                "Unknown": 0,
                "Charging": 1,
                "Discharging": 2,
                "NotCharging": 3,
                "Full": 4
            }
        }
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "value"; type: "State"; isReadonly: true }
        Signal { name: "stateChanged" }
    }
    Component {
        name: "QMceBatteryStatus"
        prototype: "QObject"
        exports: ["Nemo.Mce/MceBatteryStatus 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Empty": 0,
                "Low": 1,
                "Ok": 2,
                "Full": 3
            }
        }
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "status"; type: "Status"; isReadonly: true }
    }
    Component {
        name: "QMceCableState"
        prototype: "QObject"
        exports: ["Nemo.Mce/MceCableState 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "connected"; type: "bool"; isReadonly: true }
    }
    Component {
        name: "QMceCallState"
        prototype: "QObject"
        exports: ["Nemo.Mce/MceCallState 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "State"
            values: {
                "None": 0,
                "Ringing": 1,
                "Active": 2,
                "Service": 3
            }
        }
        Enum {
            name: "Type"
            values: {
                "Normal": 0,
                "Emergency": 1
            }
        }
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "state"; type: "State"; isReadonly: true }
        Property { name: "type"; type: "Type"; isReadonly: true }
    }
    Component {
        name: "QMceChargerState"
        prototype: "QObject"
        exports: ["Nemo.Mce/MceChargerState 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "charging"; type: "bool"; isReadonly: true }
    }
    Component {
        name: "QMceChargerType"
        prototype: "QObject"
        exports: ["Nemo.Mce/MceChargerType 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Type"
            values: {
                "None": 0,
                "USB": 1,
                "DCP": 2,
                "HVDCP": 3,
                "CDP": 4,
                "Wireless": 5,
                "Other": 6
            }
        }
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "type"; type: "Type"; isReadonly: true }
    }
    Component {
        name: "QMceDisplay"
        prototype: "QObject"
        exports: ["Nemo.Mce/MceDisplay 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "State"
            values: {
                "DisplayOff": 0,
                "DisplayDim": 1,
                "DisplayOn": 2
            }
        }
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "state"; type: "State"; isReadonly: true }
    }
    Component {
        name: "QMceNameOwner"
        prototype: "QObject"
        exports: ["Nemo.Mce/MceNameOwner 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "nameOwner"; type: "string"; isReadonly: true }
    }
    Component {
        name: "QMcePowerSaveMode"
        prototype: "QObject"
        exports: ["Nemo.Mce/McePowerSaveMode 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "active"; type: "bool"; isReadonly: true }
    }
    Component {
        name: "QMceTkLock"
        prototype: "QObject"
        exports: ["Nemo.Mce/MceTkLock 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Mode"
            values: {
                "Locked": 0,
                "SilentLocked": 1,
                "LockedDim": 2,
                "LockedDelay": 3,
                "SilentLockedDim": 4,
                "Unlocked": 5,
                "SilentUnlocked": 6
            }
        }
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "locked"; type: "bool"; isReadonly: true }
        Property { name: "mode"; type: "Mode"; isReadonly: true }
    }
}
