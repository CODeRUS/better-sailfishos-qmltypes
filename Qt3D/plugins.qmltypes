import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated with the command 'qmlplugindump -notrelocatable Qt3D 2.0'.

Module {
    Component {
        name: "BillboardItem3D"
        defaultProperty: "data"
        prototype: "QQuickItem3D"
        exports: ["Qt3D/BillboardItem3D 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "preserveUpVector"; type: "bool" }
    }
    Component {
        name: "CapsuleMesh"
        prototype: "QQuickMesh"
        exports: ["Qt3D/CapsuleMesh 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "radius"; type: "float" }
        Property { name: "length"; type: "float" }
        Property { name: "levelOfDetail"; type: "int" }
    }
    Component {
        name: "CylinderMesh"
        prototype: "QQuickMesh"
        exports: ["Qt3D/CylinderMesh 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "radius"; type: "float" }
        Property { name: "length"; type: "float" }
        Property { name: "levelOfDetail"; type: "int" }
    }
    Component {
        name: "Line"
        defaultProperty: "data"
        prototype: "QQuickItem3D"
        exports: ["Qt3D/Line 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "width"; type: "float" }
        Property { name: "vertices"; type: "QVariant" }
    }
    Component {
        name: "Point"
        defaultProperty: "data"
        prototype: "QQuickItem3D"
        exports: ["Qt3D/Point 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "pointSize"; type: "float" }
        Property { name: "vertices"; type: "QVariant" }
    }
    Component {
        name: "QGLAbstractMaterial"
        prototype: "QObject"
        Signal { name: "materialChanged" }
    }
    Component {
        name: "QGLCamera"
        prototype: "QObject"
        exports: ["Qt3D/Camera 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ProjectionType"
            values: {
                "Perspective": 0,
                "Orthographic": 1
            }
        }
        Enum {
            name: "RotateOrder"
            values: {
                "TiltPanRoll": 0,
                "TiltRollPan": 1,
                "PanTiltRoll": 2,
                "PanRollTilt": 3,
                "RollTiltPan": 4,
                "RollPanTilt": 5
            }
        }
        Property { name: "projectionType"; type: "ProjectionType" }
        Property { name: "fieldOfView"; type: "float" }
        Property { name: "nearPlane"; type: "float" }
        Property { name: "farPlane"; type: "float" }
        Property { name: "viewSize"; type: "QSizeF" }
        Property { name: "minViewSize"; type: "QSizeF" }
        Property { name: "screenRotation"; type: "int" }
        Property { name: "eye"; type: "QVector3D" }
        Property { name: "upVector"; type: "QVector3D" }
        Property { name: "center"; type: "QVector3D" }
        Property { name: "eyeSeparation"; type: "float" }
        Property { name: "motionAdjustment"; type: "QVector3D" }
        Property { name: "adjustForAspectRatio"; type: "bool" }
        Signal { name: "projectionChanged" }
        Signal { name: "viewChanged" }
        Method {
            name: "translateEye"
            Parameter { name: "x"; type: "float" }
            Parameter { name: "y"; type: "float" }
            Parameter { name: "z"; type: "float" }
        }
        Method {
            name: "translateCenter"
            Parameter { name: "x"; type: "float" }
            Parameter { name: "y"; type: "float" }
            Parameter { name: "z"; type: "float" }
        }
        Method {
            name: "tiltPanRollCenter"
            Parameter { name: "tiltAngle"; type: "float" }
            Parameter { name: "panAngle"; type: "float" }
            Parameter { name: "rollAngle"; type: "float" }
            Parameter { name: "order"; type: "QGLCamera::RotateOrder" }
        }
        Method {
            name: "tiltPanRollCenter"
            Parameter { name: "tiltAngle"; type: "float" }
            Parameter { name: "panAngle"; type: "float" }
            Parameter { name: "rollAngle"; type: "float" }
        }
        Method {
            name: "tiltPanRollEye"
            Parameter { name: "tiltAngle"; type: "float" }
            Parameter { name: "panAngle"; type: "float" }
            Parameter { name: "rollAngle"; type: "float" }
            Parameter { name: "order"; type: "QGLCamera::RotateOrder" }
        }
        Method {
            name: "tiltPanRollEye"
            Parameter { name: "tiltAngle"; type: "float" }
            Parameter { name: "panAngle"; type: "float" }
            Parameter { name: "rollAngle"; type: "float" }
        }
    }
    Component {
        name: "QGLLightModel"
        prototype: "QObject"
        exports: ["Qt3D/LightModel 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Model"
            values: {
                "OneSided": 0,
                "TwoSided": 1
            }
        }
        Enum {
            name: "ColorControl"
            values: {
                "SingleColor": 0,
                "SeparateSpecularColor": 1
            }
        }
        Enum {
            name: "ViewerPosition"
            values: {
                "ViewerAtInfinity": 0,
                "LocalViewer": 1
            }
        }
        Property { name: "model"; type: "Model" }
        Property { name: "colorControl"; type: "ColorControl" }
        Property { name: "viewerPosition"; type: "ViewerPosition" }
        Property { name: "ambientSceneColor"; type: "QColor" }
        Signal { name: "lightModelChanged" }
    }
    Component {
        name: "QGLLightParameters"
        prototype: "QObject"
        exports: ["Qt3D/Light 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "LightType"
            values: {
                "Directional": 0,
                "Positional": 1
            }
        }
        Property { name: "type"; type: "LightType"; isReadonly: true }
        Property { name: "position"; type: "QVector3D" }
        Property { name: "direction"; type: "QVector3D" }
        Property { name: "ambientColor"; type: "QColor" }
        Property { name: "diffuseColor"; type: "QColor" }
        Property { name: "specularColor"; type: "QColor" }
        Property { name: "spotDirection"; type: "QVector3D" }
        Property { name: "spotExponent"; type: "float" }
        Property { name: "spotAngle"; type: "float" }
        Property { name: "constantAttenuation"; type: "float" }
        Property { name: "linearAttenuation"; type: "float" }
        Property { name: "quadraticAttenuation"; type: "float" }
        Signal { name: "lightChanged" }
    }
    Component {
        name: "QGLMaterial"
        prototype: "QGLAbstractMaterial"
        exports: ["Qt3D/Material 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "TextureCombineMode"
            values: {
                "Modulate": 0,
                "Decal": 1,
                "Replace": 2
            }
        }
        Property { name: "ambientColor"; type: "QColor" }
        Property { name: "diffuseColor"; type: "QColor" }
        Property { name: "specularColor"; type: "QColor" }
        Property { name: "emittedLight"; type: "QColor" }
        Property { name: "shininess"; type: "float" }
        Property { name: "texture"; type: "QGLTexture2D"; isPointer: true }
        Property { name: "textureCombineMode"; type: "QGLMaterial::TextureCombineMode" }
        Property { name: "textureUrl"; type: "QUrl" }
        Signal { name: "texturesChanged" }
    }
    Component {
        name: "QGLSceneNode"
        prototype: "QObject"
        exports: ["Qt3D/SceneNode 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Option"
            values: {
                "NoOptions": 0,
                "CullBoundingBox": 1,
                "ViewNormals": 2,
                "ReportCulling": 4,
                "HideNode": 8
            }
        }
        Enum {
            name: "Options"
            values: {
                "NoOptions": 0,
                "CullBoundingBox": 1,
                "ViewNormals": 2,
                "ReportCulling": 4,
                "HideNode": 8
            }
        }
        Property { name: "position"; type: "QVector3D" }
        Property { name: "x"; type: "float" }
        Property { name: "y"; type: "float" }
        Property { name: "z"; type: "float" }
        Property { name: "material"; type: "QGLMaterial"; isPointer: true }
        Property { name: "backMaterial"; type: "QGLMaterial"; isPointer: true }
        Property { name: "options"; type: "Options" }
        Signal { name: "updated" }
        Signal { name: "culled" }
        Signal { name: "displayed" }
        Method {
            name: "get"
            type: "QGLSceneNode*"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
            Parameter { name: "forceCopy"; type: "bool" }
        }
        Method {
            name: "get"
            type: "QGLSceneNode*"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "get"
            type: "QGLSceneNode*"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "get"
            type: "QGLSceneNode*"
            Parameter { name: "names"; type: "QStringList" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
            Parameter { name: "forceCopy"; type: "bool" }
        }
        Method {
            name: "get"
            type: "QGLSceneNode*"
            Parameter { name: "names"; type: "QStringList" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "get"
            type: "QGLSceneNode*"
            Parameter { name: "names"; type: "QStringList" }
        }
        Method {
            name: "except"
            type: "QGLSceneNode*"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "except"
            type: "QGLSceneNode*"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "except"
            type: "QGLSceneNode*"
            Parameter { name: "names"; type: "QStringList" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "except"
            type: "QGLSceneNode*"
            Parameter { name: "names"; type: "QStringList" }
        }
        Method {
            name: "clone"
            type: "QGLSceneNode*"
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method { name: "clone"; type: "QGLSceneNode*" }
        Method {
            name: "cloneWithChildren"
            type: "QGLSceneNode*"
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method { name: "cloneWithChildren"; type: "QGLSceneNode*" }
        Method {
            name: "cloneNoChildren"
            type: "QGLSceneNode*"
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method { name: "cloneNoChildren"; type: "QGLSceneNode*" }
        Method {
            name: "allExcept"
            type: "QGLSceneNode*"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "allExcept"
            type: "QGLSceneNode*"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "only"
            type: "QGLSceneNode*"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "only"
            type: "QGLSceneNode*"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "allExcept"
            type: "QGLSceneNode*"
            Parameter { name: "names"; type: "QStringList" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "allExcept"
            type: "QGLSceneNode*"
            Parameter { name: "names"; type: "QStringList" }
        }
        Method {
            name: "only"
            type: "QGLSceneNode*"
            Parameter { name: "names"; type: "QStringList" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "only"
            type: "QGLSceneNode*"
            Parameter { name: "names"; type: "QStringList" }
        }
    }
    Component {
        name: "QGLTexture2D"
        prototype: "QObject"
        exports: ["Qt3D/Texture2D 2.0"]
        exportMetaObjectRevisions: [0]
        Signal { name: "textureUpdated" }
        Method {
            name: "textureRequestFinished"
            Parameter { type: "QByteArray"; isPointer: true }
        }
    }
    Component {
        name: "QGraphicsLookAtTransform"
        prototype: "QQuickQGraphicsTransform3D"
        exports: ["Qt3D/LookAt 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "preserveUpVector"; type: "bool" }
        Property { name: "subject"; type: "QQuickItem3D"; isPointer: true }
    }
    Component {
        name: "QGraphicsRotation3D"
        prototype: "QQuickQGraphicsTransform3D"
        exports: ["Qt3D/Rotation3D 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "origin"; type: "QVector3D" }
        Property { name: "angle"; type: "float" }
        Property { name: "axis"; type: "QVector3D" }
    }
    Component {
        name: "QGraphicsScale3D"
        prototype: "QQuickQGraphicsTransform3D"
        Property { name: "origin"; type: "QVector3D" }
        Property { name: "scale"; type: "QVector3D" }
    }
    Component {
        name: "QGraphicsTranslation3D"
        prototype: "QQuickQGraphicsTransform3D"
        exports: ["Qt3D/Translation3D 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "translate"; type: "QVector3D" }
        Property { name: "progress"; type: "float" }
    }
    Component {
        name: "QQuickAnimation3D"
        prototype: "QObject"
        exports: ["Qt3D/Animation3D 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "name"; type: "string"; isReadonly: true }
    }
    Component {
        name: "QQuickEffect"
        prototype: "QObject"
        exports: ["Qt3D/Effect 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "color"; type: "QColor" }
        Property { name: "useLighting"; type: "bool" }
        Property { name: "decal"; type: "bool" }
        Property { name: "blending"; type: "bool" }
        Property { name: "texture"; type: "QUrl" }
        Property { name: "textureImage"; type: "QImage" }
        Property { name: "material"; type: "QGLMaterial"; isPointer: true }
        Property { name: "progress"; type: "float"; isReadonly: true }
        Signal { name: "effectChanged" }
        Signal {
            name: "progressChanged"
            Parameter { name: "progress"; type: "float" }
        }
    }
    Component {
        name: "QQuickItem3D"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Qt3D/Item3D 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "CullFace"
            values: {
                "CullDisabled": 0,
                "CullFrontFaces": 1028,
                "CullBackFaces": 1029,
                "CullAllFaces": 1032,
                "CullClockwise": 65536
            }
        }
        Enum {
            name: "CullFaces"
            values: {
                "CullDisabled": 0,
                "CullFrontFaces": 1028,
                "CullBackFaces": 1029,
                "CullAllFaces": 1032,
                "CullClockwise": 65536
            }
        }
        Enum {
            name: "SortMode"
            values: {
                "DefaultSorting": 0,
                "BackToFront": 1
            }
        }
        Property { name: "position"; type: "QVector3D" }
        Property { name: "x"; type: "float" }
        Property { name: "y"; type: "float" }
        Property { name: "z"; type: "float" }
        Property { name: "scale"; type: "float" }
        Property { name: "transform"; type: "QQuickQGraphicsTransform3D"; isList: true; isReadonly: true }
        Property {
            name: "pretransform"
            type: "QQuickQGraphicsTransform3D"
            isList: true
            isReadonly: true
        }
        Property { name: "mesh"; type: "QQuickMesh"; isPointer: true }
        Property { name: "effect"; type: "QQuickEffect"; isPointer: true }
        Property { name: "light"; type: "QGLLightParameters"; isPointer: true }
        Property { name: "resources"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "cullFaces"; type: "CullFaces" }
        Property { name: "sortChildren"; type: "SortMode" }
        Property { name: "meshNode"; type: "string" }
        Property { name: "inheritEvents"; type: "bool" }
        Property { name: "enabled"; type: "bool" }
        Property { name: "animations"; type: "QQuickAnimation3D"; isList: true; isReadonly: true }
        Signal { name: "position3dChanged" }
        Signal { name: "scale3dChanged" }
        Signal { name: "clicked" }
        Signal { name: "doubleClicked" }
        Signal { name: "pressed" }
        Signal { name: "released" }
        Signal { name: "hoverEnter" }
        Signal { name: "hoverLeave" }
        Method { name: "update" }
        Method { name: "updateAnimations" }
        Method {
            name: "localToWorld"
            type: "QVector3D"
            Parameter { name: "point"; type: "QVector3D" }
        }
        Method { name: "localToWorld"; type: "QVector3D" }
        Method {
            name: "worldToLocal"
            type: "QVector3D"
            Parameter { name: "point"; type: "QVector3D" }
        }
        Method { name: "worldToLocal"; type: "QVector3D" }
    }
    Component {
        name: "QQuickMesh"
        prototype: "QObject"
        exports: ["Qt3D/Mesh 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QUrl" }
        Property { name: "meshName"; type: "string" }
        Property { name: "options"; type: "string" }
        Property { name: "node"; type: "QGLSceneNode"; isReadonly: true; isPointer: true }
        Property { name: "dumpInfo"; type: "bool" }
        Signal { name: "dataChanged" }
        Signal { name: "animationsChanged" }
        Signal { name: "loaded" }
        Method {
            name: "material"
            type: "QObject*"
            Parameter { name: "nodeName"; type: "string" }
            Parameter { name: "materialName"; type: "string" }
        }
    }
    Component {
        name: "QQuickQGraphicsTransform3D"
        prototype: "QObject"
        Signal { name: "transformChanged" }
    }
    Component {
        name: "Scale3D"
        prototype: "QGraphicsScale3D"
        exports: ["Qt3D/Scale3D 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "scale"; type: "QVariant" }
        Signal { name: "variantScaleChanged" }
    }
    Component {
        name: "ShaderProgram"
        prototype: "QQuickEffect"
        exports: ["Qt3D/ShaderProgram 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "vertexShader"; type: "string" }
        Property { name: "fragmentShader"; type: "string" }
        Signal { name: "finishedLoading" }
        Signal { name: "shaderChanged" }
        Method { name: "markAllPropertiesDirty" }
        Method {
            name: "markPropertyDirty"
            Parameter { name: "property"; type: "int" }
        }
    }
    Component {
        name: "Skybox"
        prototype: "QObject"
        exports: ["Qt3D/Skybox 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QUrl" }
        Property { name: "viewport"; type: "Viewport"; isPointer: true }
    }
    Component {
        name: "SphereMesh"
        prototype: "QQuickMesh"
        exports: ["Qt3D/SphereMesh 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "radius"; type: "float" }
        Property { name: "levelOfDetail"; type: "int" }
        Property { name: "axis"; type: "Qt::Axis" }
    }
    Component {
        name: "Viewport"
        defaultProperty: "data"
        prototype: "QQuickPaintedItem"
        exports: ["Qt3D/Viewport 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "RenderMode"
            values: {
                "UnknownRender": 0,
                "DirectRender": 1,
                "BufferedRender": 2
            }
        }
        Property { name: "fillColor"; type: "QColor" }
        Property { name: "renderMode"; type: "RenderMode" }
        Property { name: "picking"; type: "bool" }
        Property { name: "showPicking"; type: "bool" }
        Property { name: "showSceneGraph"; type: "bool" }
        Property { name: "navigation"; type: "bool" }
        Property { name: "fovzoom"; type: "bool" }
        Property { name: "blending"; type: "bool" }
        Property { name: "camera"; type: "QGLCamera"; isPointer: true }
        Property { name: "light"; type: "QGLLightParameters"; isPointer: true }
        Property { name: "lightModel"; type: "QGLLightModel"; isPointer: true }
        Signal { name: "viewportChanged" }
        Method { name: "update3d" }
    }
}
