import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable org.nemomobile.configuration 1.0'

Module {
    Component {
        name: "ConfigurationGroup"
        defaultProperty: "data"
        prototype: "MDConfGroup"
        exports: ["org.nemomobile.configuration/ConfigurationGroup 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        name: "ConfigurationValue"
        prototype: "QObject"
        exports: ["org.nemomobile.configuration/ConfigurationValue 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "key"; type: "string" }
        Property { name: "value"; type: "QVariant" }
        Property { name: "defaultValue"; type: "QVariant" }
        Method { name: "sync" }
    }
    Component {
        name: "MDConfGroup"
        prototype: "QObject"
        Property { name: "synchronous"; type: "bool" }
        Property { name: "path"; type: "string" }
        Property { name: "scope"; type: "MDConfGroup"; isPointer: true }
        Signal {
            name: "valueChanged"
            Parameter { name: "key"; type: "string" }
        }
        Signal { name: "valuesChanged" }
        Method { name: "sync" }
        Method { name: "clear" }
        Method {
            name: "value"
            type: "QVariant"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "defaultValue"; type: "QVariant" }
            Parameter { name: "typeHint"; type: "int" }
        }
        Method {
            name: "value"
            type: "QVariant"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "defaultValue"; type: "QVariant" }
        }
        Method {
            name: "value"
            type: "QVariant"
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "setValue"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
}
