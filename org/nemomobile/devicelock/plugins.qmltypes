import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable -noinstantiate org.nemomobile.devicelock 1.0'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "DeviceLockAuthenticationInput"
        prototype: "NemoDeviceLock::AuthenticationInput"
        exports: [
            "org.nemomobile.devicelock/DeviceLockAuthenticationInput 1.0"
        ]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "NemoDeviceLock::AuthenticationInput"
        prototype: "QObject"
        exports: ["org.nemomobile.devicelock/AuthenticationInput 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Feedback"
            values: {
                "EnterSecurityCode": 0,
                "EnterNewSecurityCode": 1,
                "RepeatNewSecurityCode": 2,
                "SuggestSecurityCode": 3,
                "SecurityCodesDoNotMatch": 4,
                "SecurityCodeInHistory": 5,
                "SecurityCodeExpired": 6,
                "SecurityCodeDueToExpire": 7,
                "PartialPrint": 8,
                "PrintIsUnclear": 9,
                "SensorIsDirty": 10,
                "SwipeFaster": 11,
                "SwipeSlower": 12,
                "UnrecognizedFinger": 13,
                "IncorrectSecurityCode": 14,
                "ContactSupport": 15,
                "TemporarilyLocked": 16,
                "PermanentlyLocked": 17,
                "UnlockToPerformOperation": 18
            }
        }
        Enum {
            name: "Error"
            values: {
                "FunctionUnavailable": 0,
                "LockedByManager": 1,
                "MaximumAttemptsExceeded": 2,
                "Canceled": 3,
                "SoftwareError": 4
            }
        }
        Enum {
            name: "Status"
            values: {
                "Idle": 0,
                "Authenticating": 1,
                "Evaluating": 2,
                "AuthenticationError": 3
            }
        }
        Enum {
            name: "CodeGeneration"
            values: {
                "NoCodeGeneration": 0,
                "OptionalCodeGeneration": 1,
                "MandatoryCodeGeneration": 2
            }
        }
        Property { name: "utilizedMethods"; type: "Authenticator::Methods"; isReadonly: true }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "authenticatingProcess"; type: "bool"; isReadonly: true }
        Property { name: "active"; type: "bool" }
        Property { name: "registered"; type: "bool" }
        Property { name: "minimumCodeLength"; type: "int"; isReadonly: true }
        Property { name: "maximumCodeLength"; type: "int"; isReadonly: true }
        Property { name: "maximumAttempts"; type: "int"; isReadonly: true }
        Property { name: "codeInputIsKeyboard"; type: "bool"; isReadonly: true }
        Property { name: "codeGeneration"; type: "CodeGeneration"; isReadonly: true }
        Signal { name: "authenticatingPidChanged" }
        Signal { name: "temporaryLockoutDurationChanged" }
        Signal { name: "temporaryLockoutExpirationChanged" }
        Signal {
            name: "authenticationStarted"
            Parameter { name: "feedback"; type: "Feedback" }
            Parameter { name: "data"; type: "QVariant" }
        }
        Signal {
            name: "authenticationUnavailable"
            Parameter { name: "error"; type: "Error" }
        }
        Signal { name: "authenticationEvaluating" }
        Signal {
            name: "authenticationProgress"
            Parameter { name: "current"; type: "int" }
            Parameter { name: "maximum"; type: "int" }
        }
        Signal {
            name: "authenticationEnded"
            Parameter { name: "confirmed"; type: "bool" }
        }
        Signal {
            name: "feedback"
            Parameter { name: "feedback"; type: "Feedback" }
            Parameter { name: "data"; type: "QVariantMap" }
        }
        Signal {
            name: "error"
            Parameter { name: "error"; type: "Error" }
        }
        Method {
            name: "enterSecurityCode"
            Parameter { name: "code"; type: "string" }
        }
        Method { name: "requestSecurityCode" }
        Method { name: "cancel" }
    }
    Component {
        name: "NemoDeviceLock::Authenticator"
        prototype: "QObject"
        exports: ["org.nemomobile.devicelock/Authenticator 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Method"
            values: {
                "NoAuthentication": 0,
                "SecurityCode": 1,
                "Fingerprint": 2
            }
        }
        Enum {
            name: "Methods"
            values: {
                "NoAuthentication": 0,
                "SecurityCode": 1,
                "Fingerprint": 2
            }
        }
        Property { name: "availableMethods"; type: "Methods"; isReadonly: true }
        Signal { name: "authenticatingChanged" }
        Signal {
            name: "authenticated"
            Parameter { name: "authenticationToken"; type: "QVariant" }
        }
        Signal { name: "aborted" }
        Method {
            name: "authenticate"
            Parameter { name: "challengeCode"; type: "QVariant" }
            Parameter { name: "methods"; type: "Methods" }
        }
        Method {
            name: "authenticate"
            Parameter { name: "challengeCode"; type: "QVariant" }
        }
        Method { name: "cancel" }
    }
    Component {
        name: "NemoDeviceLock::Authorization"
        prototype: "QObject"
        exports: ["org.nemomobile.devicelock/Authorization 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "NoChallenge": 0,
                "RequestingChallenge": 1,
                "ChallengeIssued": 2
            }
        }
        Property {
            name: "allowedMethods"
            type: "NemoDeviceLock::Authenticator::Methods"
            isReadonly: true
        }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "challengeCode"; type: "QVariant"; isReadonly: true }
        Signal { name: "challengeIssued" }
        Signal { name: "challengeDeclined" }
        Signal { name: "challengeExpired" }
        Method { name: "requestChallenge" }
        Method { name: "relinquishChallenge" }
    }
    Component {
        name: "NemoDeviceLock::DeviceLock"
        prototype: "QObject"
        exports: ["org.nemomobile.devicelock/DeviceLock 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Enum {
            name: "LockState"
            values: {
                "Unlocked": 0,
                "Locked": 1,
                "ManagerLockout": 2,
                "CodeEntryLockout": 3,
                "Undefined": 4
            }
        }
        Enum {
            name: "Notice"
            values: {
                "SecurityCodeDueToExpire": 0,
                "SecurityCodeChanged": 1
            }
        }
        Property { name: "enabled"; type: "bool"; isReadonly: true }
        Property { name: "unlocking"; type: "bool"; isReadonly: true }
        Property { name: "state"; type: "LockState"; isReadonly: true }
        Property { name: "automaticLocking"; type: "int"; isReadonly: true }
        Property { name: "showNotifications"; type: "bool"; isReadonly: true }
        Signal { name: "locked" }
        Signal { name: "unlocked" }
        Signal { name: "unlockError" }
        Signal {
            name: "notice"
            Parameter { name: "notice"; type: "Notice" }
            Parameter { name: "data"; type: "QVariantMap" }
        }
        Method { name: "unlock" }
        Method { name: "cancel" }
    }
    Component {
        name: "NemoDeviceLock::DeviceLockSettings"
        prototype: "QObject"
        exports: ["org.nemomobile.devicelock/DeviceLockSettings 1.0"]
        exportMetaObjectRevisions: [0]
        Property {
            name: "authorization"
            type: "NemoDeviceLock::Authorization"
            isReadonly: true
            isPointer: true
        }
        Property { name: "automaticLocking"; type: "int"; isReadonly: true }
        Property { name: "maximumAttempts"; type: "int"; isReadonly: true }
        Property { name: "peekingAllowed"; type: "bool"; isReadonly: true }
        Property { name: "sideloadingAllowed"; type: "bool"; isReadonly: true }
        Property { name: "showNotifications"; type: "bool"; isReadonly: true }
        Property { name: "inputIsKeyboard"; type: "bool"; isReadonly: true }
        Property { name: "currentCodeIsDigitOnly"; type: "bool"; isReadonly: true }
        Property { name: "homeEncrypted"; type: "bool"; isReadonly: true }
        Property { name: "maximumAutomaticLocking"; type: "int"; isReadonly: true }
        Property { name: "absoluteMaximumAttempts"; type: "int"; isReadonly: true }
        Method {
            name: "setAutomaticLocking"
            Parameter { name: "authenticationToken"; type: "QVariant" }
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "setMaximumAttempts"
            Parameter { name: "authenticationToken"; type: "QVariant" }
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "setPeekingAllowed"
            Parameter { name: "authenticationToken"; type: "QVariant" }
            Parameter { name: "value"; type: "bool" }
        }
        Method {
            name: "setSideloadingAllowed"
            Parameter { name: "authenticationToken"; type: "QVariant" }
            Parameter { name: "value"; type: "bool" }
        }
        Method {
            name: "setShowNotifications"
            Parameter { name: "authenticationToken"; type: "QVariant" }
            Parameter { name: "value"; type: "bool" }
        }
        Method {
            name: "setInputIsKeyboard"
            Parameter { name: "authenticationToken"; type: "QVariant" }
            Parameter { name: "value"; type: "bool" }
        }
    }
    Component {
        name: "NemoDeviceLock::DeviceReset"
        prototype: "QObject"
        exports: ["org.nemomobile.devicelock/DeviceReset 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Option"
            values: {
                "Shutdown": 0,
                "Reboot": 1,
                "WipePartitions": 2,
                "ClearExternalMedia": 4
            }
        }
        Enum {
            name: "Options"
            values: {
                "Shutdown": 0,
                "Reboot": 1,
                "WipePartitions": 2,
                "ClearExternalMedia": 4
            }
        }
        Property {
            name: "authorization"
            type: "NemoDeviceLock::Authorization"
            isReadonly: true
            isPointer: true
        }
        Property { name: "supportedOptions"; type: "Options"; isReadonly: true }
        Signal { name: "clearingDevice" }
        Signal { name: "clearDeviceError" }
        Method {
            name: "clearDevice"
            Parameter { name: "authenticationToken"; type: "QVariant" }
            Parameter { name: "options"; type: "Options" }
        }
        Method {
            name: "clearDevice"
            Parameter { name: "authenticationToken"; type: "QVariant" }
        }
    }
    Component {
        name: "NemoDeviceLock::EncryptionSettings"
        prototype: "QObject"
        exports: ["org.nemomobile.devicelock/EncryptionSettings 1.0"]
        exportMetaObjectRevisions: [0]
        Property {
            name: "authorization"
            type: "NemoDeviceLock::Authorization"
            isReadonly: true
            isPointer: true
        }
        Property { name: "homeEncrypted"; type: "bool"; isReadonly: true }
        Property { name: "supported"; type: "bool"; isReadonly: true }
        Signal { name: "encryptingHome" }
        Signal { name: "encryptHomeError" }
        Method {
            name: "encryptHome"
            Parameter { name: "authenticationToken"; type: "QVariant" }
        }
    }
    Component {
        name: "NemoDeviceLock::FingerprintModel"
        prototype: "QAbstractListModel"
        Property { name: "count"; type: "int"; isReadonly: true }
        Property {
            name: "authorization"
            type: "NemoDeviceLock::Authorization"
            isReadonly: true
            isPointer: true
        }
        Method {
            name: "remove"
            Parameter { name: "authenticationToken"; type: "QVariant" }
            Parameter { name: "id"; type: "QVariant" }
        }
        Method {
            name: "rename"
            Parameter { name: "id"; type: "QVariant" }
            Parameter { name: "name"; type: "string" }
        }
    }
    Component {
        name: "NemoDeviceLock::FingerprintSensor"
        prototype: "QObject"
        exports: ["org.nemomobile.devicelock/FingerprintSensor 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Feedback"
            values: {
                "PartialPrint": 0,
                "PrintIsUnclear": 1,
                "SensorIsDirty": 2,
                "SwipeFaster": 3,
                "SwipeSlower": 4
            }
        }
        Enum {
            name: "Error"
            values: {
                "HardwareUnavailable": 0,
                "CannotContinue": 1,
                "Timeout": 2,
                "NoSpace": 3,
                "Canceled": 4
            }
        }
        Property { name: "samplesRemaining"; type: "int"; isReadonly: true }
        Property { name: "samplesRequired"; type: "int"; isReadonly: true }
        Property { name: "hasSensor"; type: "bool"; isReadonly: true }
        Property { name: "acquiring"; type: "bool"; isReadonly: true }
        Property {
            name: "authorization"
            type: "NemoDeviceLock::Authorization"
            isReadonly: true
            isPointer: true
        }
        Property {
            name: "fingers"
            type: "NemoDeviceLock::FingerprintModel"
            isReadonly: true
            isPointer: true
        }
        Signal { name: "acquisitionCompleted" }
        Signal {
            name: "acquisitionFeedback"
            Parameter { name: "feedback"; type: "Feedback" }
        }
        Signal {
            name: "acquisitionError"
            Parameter { name: "error"; type: "Error" }
        }
        Method {
            name: "acquireFinger"
            Parameter { name: "authenticationToken"; type: "QVariant" }
        }
        Method { name: "cancelAcquisition" }
    }
    Component {
        name: "NemoDeviceLock::SecurityCodeSettings"
        prototype: "QObject"
        exports: ["org.nemomobile.devicelock/SecurityCodeSettings 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "set"; type: "bool"; isReadonly: true }
        Property { name: "mandatory"; type: "bool"; isReadonly: true }
        Signal { name: "changingChanged" }
        Signal { name: "clearingChanged" }
        Signal {
            name: "changed"
            Parameter { name: "authenticationToken"; type: "QVariant" }
        }
        Signal { name: "changeAborted" }
        Signal { name: "cleared" }
        Signal { name: "clearAborted" }
        Method {
            name: "change"
            Parameter { name: "challengeCode"; type: "QVariant" }
        }
        Method { name: "clear" }
        Method { name: "cancel" }
    }
}
