import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable org.nemomobile.devicelock 1.0'

Module {
    Component {
        name: "Authenticator"
        prototype: "QObject"
        Enum {
            name: "Feedback"
            values: {
                "PartialPrint": 0,
                "PrintIsUnclear": 1,
                "SensorIsDirty": 2,
                "SwipeFaster": 3,
                "SwipeSlower": 4,
                "UnrecognizedFinger": 5,
                "IncorrectLockCode": 6
            }
        }
        Enum {
            name: "Error"
            values: {
                "LockedOut": 0
            }
        }
        Enum {
            name: "Method"
            values: {
                "NoAuthentication": 0,
                "LockCode": 1,
                "Fingerprint": 2
            }
        }
        Enum {
            name: "Methods"
            values: {
                "NoAuthentication": 0,
                "LockCode": 1,
                "Fingerprint": 2
            }
        }
        Property { name: "availableMethods"; type: "Methods"; isReadonly: true }
        Property { name: "utilizedMethods"; type: "Methods"; isReadonly: true }
        Property { name: "authenticating"; type: "bool"; isReadonly: true }
        Property { name: "minimumCodeLength"; type: "int"; isReadonly: true }
        Property { name: "maximumCodeLength"; type: "int"; isReadonly: true }
        Property { name: "maximumAttempts"; type: "int"; isReadonly: true }
        Property { name: "codeInputIsKeyboard"; type: "bool"; isReadonly: true }
        Signal {
            name: "authenticated"
            Parameter { name: "authenticationToken"; type: "QVariant" }
        }
        Signal {
            name: "feedback"
            Parameter { name: "feedback"; type: "Feedback" }
            Parameter { name: "attemptsRemaining"; type: "int" }
        }
        Signal {
            name: "error"
            Parameter { name: "error"; type: "Error" }
        }
        Method {
            name: "authenticate"
            Parameter { name: "challengeCode"; type: "QVariant" }
            Parameter { name: "methods"; type: "Methods" }
        }
        Method {
            name: "authenticate"
            Parameter { name: "challengeCode"; type: "QVariant" }
        }
        Method {
            name: "enterLockCode"
            Parameter { name: "code"; type: "string" }
        }
        Method { name: "cancel" }
    }
    Component {
        name: "Authorization"
        prototype: "QObject"
        exports: ["org.nemomobile.devicelock/Authorization 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "NoChallenge": 0,
                "RequestingChallenge": 1,
                "ChallengeIssued": 2
            }
        }
        Property { name: "allowedMethods"; type: "Authenticator::Methods"; isReadonly: true }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "challengeCode"; type: "QVariant"; isReadonly: true }
        Signal { name: "challengeIssued" }
        Signal { name: "challengeDeclined" }
        Method { name: "requestChallenge" }
        Method { name: "relinquishChallenge" }
    }
    Component {
        name: "DeviceLock"
        prototype: "QObject"
        Enum {
            name: "LockState"
            values: {
                "Unlocked": 0,
                "Locked": 1,
                "Undefined": 2
            }
        }
        Property { name: "enabled"; type: "bool"; isReadonly: true }
        Property { name: "state"; type: "LockState"; isReadonly: true }
        Property { name: "automaticLocking"; type: "int"; isReadonly: true }
        Property { name: "authorization"; type: "Authorization"; isReadonly: true; isPointer: true }
        Signal { name: "locked" }
        Signal { name: "unlocked" }
        Method {
            name: "unlock"
            Parameter { name: "authenticationToken"; type: "QVariant" }
        }
    }
    Component {
        name: "DeviceLockSettings"
        prototype: "QObject"
        Property { name: "authorization"; type: "Authorization"; isReadonly: true; isPointer: true }
        Property { name: "automaticLocking"; type: "int"; isReadonly: true }
        Property { name: "maximumAttempts"; type: "int"; isReadonly: true }
        Property { name: "peekingAllowed"; type: "int"; isReadonly: true }
        Property { name: "sideloadingAllowed"; type: "int"; isReadonly: true }
        Property { name: "showNotifications"; type: "int"; isReadonly: true }
        Property { name: "inputIsKeyboard"; type: "bool"; isReadonly: true }
        Property { name: "currentCodeIsDigitOnly"; type: "bool"; isReadonly: true }
        Signal { name: "challengeCodeChanged" }
        Method {
            name: "setAutomaticLocking"
            Parameter { name: "authenticationToken"; type: "QVariant" }
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "setMaximumAttempts"
            Parameter { name: "authenticationToken"; type: "QVariant" }
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "setPeekingAllowed"
            Parameter { name: "authenticationToken"; type: "QVariant" }
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "setSideloadingAllowed"
            Parameter { name: "authenticationToken"; type: "QVariant" }
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "setShowNotifications"
            Parameter { name: "authenticationToken"; type: "QVariant" }
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "setInputIsKeyboard"
            Parameter { name: "authenticationToken"; type: "QVariant" }
            Parameter { name: "value"; type: "bool" }
        }
    }
    Component {
        name: "DeviceReset"
        prototype: "QObject"
        Enum {
            name: "ResetMode"
            values: {
                "Shutdown": 0,
                "Reboot": 1
            }
        }
        Property { name: "authorization"; type: "Authorization"; isReadonly: true; isPointer: true }
        Signal { name: "challengeIssued" }
        Signal { name: "challengeCodeChanged" }
        Method {
            name: "clearDevice"
            type: "bool"
            Parameter { name: "authenticationToken"; type: "QVariant" }
            Parameter { name: "mode"; type: "ResetMode" }
        }
        Method {
            name: "clearDevice"
            type: "bool"
            Parameter { name: "authenticationToken"; type: "QVariant" }
        }
    }
    Component {
        name: "FingerprintModel"
        prototype: "QAbstractListModel"
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "authorization"; type: "Authorization"; isReadonly: true; isPointer: true }
        Signal { name: "challengeCodeChanged" }
        Method {
            name: "remove"
            Parameter { name: "authenticationToken"; type: "QVariant" }
            Parameter { name: "id"; type: "QVariant" }
        }
        Method {
            name: "rename"
            Parameter { name: "id"; type: "QVariant" }
            Parameter { name: "name"; type: "string" }
        }
    }
    Component {
        name: "FingerprintSettings"
        prototype: "QObject"
        Enum {
            name: "Feedback"
            values: {
                "PartialPrint": 0,
                "PrintIsUnclear": 1,
                "SensorIsDirty": 2,
                "SwipeFaster": 3,
                "SwipeSlower": 4
            }
        }
        Enum {
            name: "Error"
            values: {
                "HardwareUnavailable": 0,
                "CannotContinue": 1,
                "Timeout": 2,
                "NoSpace": 3,
                "Canceled": 4
            }
        }
        Property { name: "samplesRemaining"; type: "int"; isReadonly: true }
        Property { name: "samplesRequired"; type: "int"; isReadonly: true }
        Property { name: "hasSensor"; type: "bool"; isReadonly: true }
        Property { name: "acquiring"; type: "bool"; isReadonly: true }
        Property { name: "authorization"; type: "Authorization"; isReadonly: true; isPointer: true }
        Property { name: "fingers"; type: "FingerprintModel"; isReadonly: true; isPointer: true }
        Signal { name: "acquisitionCompleted" }
        Signal {
            name: "acquisitionFeedback"
            Parameter { name: "feedback"; type: "Feedback" }
        }
        Signal {
            name: "acquisitionError"
            Parameter { name: "error"; type: "Error" }
        }
        Signal { name: "challengeCodeChanged" }
        Method {
            name: "acquireFinger"
            Parameter { name: "authenticationToken"; type: "QVariant" }
        }
        Method { name: "cancelAcquisition" }
    }
    Component {
        name: "LockCodeSettings"
        prototype: "QObject"
        Property { name: "set"; type: "bool"; isReadonly: true }
        Property { name: "minimumLength"; type: "int"; isReadonly: true }
        Property { name: "maximumLength"; type: "int"; isReadonly: true }
        Method {
            name: "change"
            Parameter { name: "oldCode"; type: "string" }
            Parameter { name: "newCode"; type: "string" }
        }
        Method {
            name: "clear"
            Parameter { name: "currentCode"; type: "string" }
        }
    }
    Component { name: "MceDeviceLock"; prototype: "DeviceLock" }
    Component {
        name: "NemoAuthenticator"
        prototype: "Authenticator"
        exports: ["org.nemomobile.devicelock/Authenticator 1.0"]
        exportMetaObjectRevisions: [0]
    }
    Component { name: "NemoAuthorization"; prototype: "Authorization" }
    Component {
        name: "NemoDeviceLock"
        prototype: "MceDeviceLock"
        exports: ["org.nemomobile.devicelock/DeviceLock 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "NemoDeviceLockSettings"
        prototype: "DeviceLockSettings"
        exports: ["org.nemomobile.devicelock/DeviceLockSettings 1.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "NemoDeviceReset"
        prototype: "DeviceReset"
        exports: ["org.nemomobile.devicelock/DeviceReset 1.0"]
        exportMetaObjectRevisions: [0]
    }
    Component { name: "NemoFingerprintModel"; prototype: "FingerprintModel" }
    Component {
        name: "NemoFingerprintSettings"
        prototype: "FingerprintSettings"
        exports: ["org.nemomobile.devicelock/FingerprintSettings 1.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "NemoLockCodeSettings"
        prototype: "LockCodeSettings"
        exports: ["org.nemomobile.devicelock/LockCodeSettings 1.0"]
        exportMetaObjectRevisions: [0]
    }
}
