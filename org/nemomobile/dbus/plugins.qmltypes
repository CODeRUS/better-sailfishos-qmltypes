import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable -noinstantiate -dependencies dependencies/empty.json org.nemomobile.dbus 2.0'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "DeclarativeDBus"
        prototype: "QObject"
        exports: ["org.nemomobile.dbus/DBus 2.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "BusType"
            values: {
                "SystemBus": 0,
                "SessionBus": 1
            }
        }
    }
    Component {
        name: "DeclarativeDBusAdaptor"
        prototype: "QDBusVirtualObject"
        exports: ["org.nemomobile.dbus/DBusAdaptor 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "service"; type: "string" }
        Property { name: "path"; type: "string" }
        Property { name: "iface"; type: "string" }
        Property { name: "xml"; type: "string" }
        Property { name: "bus"; type: "DeclarativeDBus::BusType" }
        Signal { name: "interfaceChanged" }
        Method {
            name: "emitSignal"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "arguments"; type: "QJSValue" }
        }
        Method {
            name: "emitSignal"
            Parameter { name: "name"; type: "string" }
        }
    }
    Component {
        name: "DeclarativeDBusInterface"
        prototype: "QObject"
        exports: ["org.nemomobile.dbus/DBusInterface 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Unknown": 0,
                "Unavailable": 1,
                "Available": 2
            }
        }
        Property { name: "watchServiceStatus"; type: "bool" }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "service"; type: "string" }
        Property { name: "path"; type: "string" }
        Property { name: "iface"; type: "string" }
        Property { name: "bus"; type: "DeclarativeDBus::BusType" }
        Property { name: "signalsEnabled"; type: "bool" }
        Property { name: "propertiesEnabled"; type: "bool" }
        Signal { name: "interfaceChanged" }
        Signal { name: "propertiesChanged" }
        Method {
            name: "call"
            Parameter { name: "method"; type: "string" }
            Parameter { name: "arguments"; type: "QJSValue" }
            Parameter { name: "callback"; type: "QJSValue" }
            Parameter { name: "errorCallback"; type: "QJSValue" }
        }
        Method {
            name: "call"
            Parameter { name: "method"; type: "string" }
            Parameter { name: "arguments"; type: "QJSValue" }
            Parameter { name: "callback"; type: "QJSValue" }
        }
        Method {
            name: "call"
            Parameter { name: "method"; type: "string" }
            Parameter { name: "arguments"; type: "QJSValue" }
        }
        Method {
            name: "call"
            Parameter { name: "method"; type: "string" }
        }
        Method {
            name: "typedCall"
            type: "bool"
            Parameter { name: "method"; type: "string" }
            Parameter { name: "arguments"; type: "QJSValue" }
            Parameter { name: "callback"; type: "QJSValue" }
            Parameter { name: "errorCallback"; type: "QJSValue" }
        }
        Method {
            name: "typedCall"
            type: "bool"
            Parameter { name: "method"; type: "string" }
            Parameter { name: "arguments"; type: "QJSValue" }
            Parameter { name: "callback"; type: "QJSValue" }
        }
        Method {
            name: "typedCall"
            type: "bool"
            Parameter { name: "method"; type: "string" }
            Parameter { name: "arguments"; type: "QJSValue" }
        }
        Method {
            name: "getProperty"
            type: "QVariant"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "setProperty"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "newValue"; type: "QVariant" }
        }
    }
    Component { name: "QDBusVirtualObject"; prototype: "QObject" }
}
