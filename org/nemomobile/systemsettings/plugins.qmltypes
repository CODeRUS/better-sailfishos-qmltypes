import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable org.nemomobile.systemsettings 1.0'

Module {
    Component {
        name: "AboutSettings"
        prototype: "QObject"
        exports: ["org.nemomobile.systemsettings/AboutSettings 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "bluetoothAddress"; type: "string"; isReadonly: true }
        Property { name: "wlanMacAddress"; type: "string"; isReadonly: true }
        Property { name: "imei"; type: "string"; isReadonly: true }
        Property { name: "serial"; type: "string"; isReadonly: true }
        Property { name: "softwareVersion"; type: "string"; isReadonly: true }
        Property { name: "softwareVersionId"; type: "string"; isReadonly: true }
        Property { name: "adaptationVersion"; type: "string"; isReadonly: true }
        Property { name: "vendorName"; type: "string"; isReadonly: true }
        Property { name: "vendorVersion"; type: "string"; isReadonly: true }
        Property { name: "internalStorageUsageModel"; type: "QVariant"; isReadonly: true }
        Property { name: "externalStorageUsageModel"; type: "QVariant"; isReadonly: true }
        Signal { name: "storageChanged" }
        Method { name: "totalDiskSpace"; type: "qlonglong" }
        Method { name: "availableDiskSpace"; type: "qlonglong" }
        Method { name: "diskUsageModel"; type: "QVariant" }
        Method { name: "refreshStorageModels" }
    }
    Component {
        name: "AlarmToneModel"
        prototype: "QAbstractListModel"
        exports: ["org.nemomobile.systemsettings/AlarmToneModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "count"; type: "int"; isReadonly: true }
        Signal { name: "selectedFileChanged" }
        Signal { name: "currentIndexChanged" }
        Method {
            name: "get"
            type: "QJSValue"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "CertificateModel"
        prototype: "QAbstractListModel"
        exports: ["org.nemomobile.systemsettings/CertificateModel 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "BundleType"
            values: {
                "NoBundle": 0,
                "TLSBundle": 1,
                "EmailBundle": 2,
                "ObjectSigningBundle": 3,
                "UserSpecifiedBundle": 4
            }
        }
        Property { name: "bundleType"; type: "BundleType" }
        Property { name: "bundlePath"; type: "string" }
    }
    Component {
        name: "DateTimeSettings"
        prototype: "QObject"
        exports: ["org.nemomobile.systemsettings/DateTimeSettings 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "HourMode"
            values: {
                "TwentyFourHours": 0,
                "TwelveHours": 1
            }
        }
        Property { name: "automaticTimeUpdate"; type: "bool" }
        Property { name: "automaticTimezoneUpdate"; type: "bool" }
        Property { name: "timezone"; type: "string" }
        Signal { name: "timeChanged" }
        Method {
            name: "setTime"
            Parameter { name: "hour"; type: "int" }
            Parameter { name: "minute"; type: "int" }
        }
        Method {
            name: "setDate"
            Parameter { name: "date"; type: "QDate" }
        }
        Method {
            name: "setHourMode"
            Parameter { name: "mode"; type: "HourMode" }
        }
    }
    Component {
        name: "DeveloperModeSettings"
        prototype: "QObject"
        exports: ["org.nemomobile.systemsettings/DeveloperModeSettings 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Idle": 0,
                "CheckingStatus": 1,
                "Installing": 2,
                "Removing": 3,
                "Success": 4,
                "Failure": 5
            }
        }
        Property { name: "wlanIpAddress"; type: "string"; isReadonly: true }
        Property { name: "usbIpAddress"; type: "string"; isReadonly: true }
        Property { name: "username"; type: "string"; isReadonly: true }
        Property { name: "developerModeEnabled"; type: "bool"; isReadonly: true }
        Property { name: "remoteLoginEnabled"; type: "bool"; isReadonly: true }
        Property { name: "workerWorking"; type: "bool"; isReadonly: true }
        Property { name: "workerStatus"; type: "DeveloperModeSettings::Status"; isReadonly: true }
        Property { name: "workerProgress"; type: "int"; isReadonly: true }
        Signal { name: "workerRetrieveDeveloperModeStatus" }
        Signal { name: "workerEnableDeveloperMode" }
        Signal { name: "workerDisableDeveloperMode" }
        Method {
            name: "setDeveloperMode"
            Parameter { name: "enabled"; type: "bool" }
        }
        Method {
            name: "setRemoteLogin"
            Parameter { name: "enabled"; type: "bool" }
        }
        Method {
            name: "setUsbIpAddress"
            Parameter { name: "usbIpAddress"; type: "string" }
        }
        Method { name: "refresh" }
    }
    Component {
        name: "DiskUsage"
        prototype: "QObject"
        exports: ["org.nemomobile.systemsettings/DiskUsage 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "working"; type: "bool"; isReadonly: true }
        Signal {
            name: "submit"
            Parameter { name: "paths"; type: "QStringList" }
            Parameter { name: "callback"; type: "QJSValue"; isPointer: true }
        }
        Method {
            name: "calculate"
            Parameter { name: "paths"; type: "QStringList" }
            Parameter { name: "callback"; type: "QJSValue" }
        }
    }
    Component {
        name: "DisplaySettings"
        prototype: "QObject"
        exports: ["org.nemomobile.systemsettings/DisplaySettings 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "DoubleTapMode"
            values: {
                "DoubleTapWakeupNever": 0,
                "DoubleTapWakeupAlways": 1,
                "DoubleTapWakeupNoProximity": 2
            }
        }
        Enum {
            name: "InhibitMode"
            values: {
                "InhibitInvalid": -1,
                "InhibitOff": 0,
                "InhibitStayOnWithCharger": 1,
                "InhibitStayDimWithCharger": 2,
                "InhibitStayOn": 3,
                "InhibitStayDim": 4
            }
        }
        Property { name: "brightness"; type: "int" }
        Property { name: "maximumBrightness"; type: "int"; isReadonly: true }
        Property { name: "dimTimeout"; type: "int" }
        Property { name: "blankTimeout"; type: "int" }
        Property { name: "inhibitMode"; type: "InhibitMode" }
        Property { name: "adaptiveDimmingEnabled"; type: "bool" }
        Property { name: "lowPowerModeEnabled"; type: "bool" }
        Property { name: "ambientLightSensorEnabled"; type: "bool" }
        Property { name: "autoBrightnessEnabled"; type: "bool" }
        Property { name: "doubleTapMode"; type: "int" }
        Property { name: "orientationLock"; type: "QVariant" }
        Property { name: "lidSensorEnabled"; type: "bool" }
        Property { name: "lidSensorFilteringEnabled"; type: "bool" }
        Property { name: "flipoverGestureEnabled"; type: "bool" }
    }
    Component {
        name: "LanguageModel"
        prototype: "QAbstractListModel"
        exports: ["org.nemomobile.systemsettings/LanguageModel 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "LocaleUpdateMode"
            values: {
                "UpdateAndReboot": 0,
                "UpdateWithoutReboot": 1
            }
        }
        Property { name: "currentIndex"; type: "int"; isReadonly: true }
        Method {
            name: "languageName"
            type: "string"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "locale"
            type: "string"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "setSystemLocale"
            Parameter { name: "localeCode"; type: "string" }
            Parameter { name: "updateMode"; type: "LocaleUpdateMode" }
        }
    }
    Component {
        name: "PartitionModel"
        prototype: "QAbstractListModel"
        exports: ["org.nemomobile.systemsettings/PartitionModel 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Unmounted": 0,
                "Mounting": 1,
                "Mounted": 2,
                "Unmounting": 3
            }
        }
        Enum {
            name: "StorageType"
            values: {
                "Invalid": 0,
                "System": 1,
                "User": 2,
                "Mass": 4,
                "External": 8,
                "ExcludeParents": 4096,
                "Internal": 7,
                "Any": 15
            }
        }
        Enum {
            name: "StorageTypes"
            values: {
                "Invalid": 0,
                "System": 1,
                "User": 2,
                "Mass": 4,
                "External": 8,
                "ExcludeParents": 4096,
                "Internal": 7,
                "Any": 15
            }
        }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "storageTypes"; type: "StorageTypes" }
        Method { name: "refresh" }
        Method {
            name: "refresh"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "ProfileControl"
        prototype: "QObject"
        exports: ["org.nemomobile.systemsettings/ProfileControl 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "VibraMode"
            values: {
                "VibraAlways": 0,
                "VibraSilent": 1,
                "VibraNormal": 2,
                "VibraNever": 3
            }
        }
        Property { name: "profile"; type: "string" }
        Property { name: "ringerVolume"; type: "int" }
        Property { name: "vibraMode"; type: "int" }
        Property { name: "systemSoundLevel"; type: "int" }
        Property { name: "touchscreenToneLevel"; type: "int" }
        Property { name: "touchscreenVibrationLevel"; type: "int" }
        Property { name: "ringerToneFile"; type: "string" }
        Property { name: "messageToneFile"; type: "string" }
        Property { name: "chatToneFile"; type: "string" }
        Property { name: "mailToneFile"; type: "string" }
        Property { name: "internetCallToneFile"; type: "string" }
        Property { name: "calendarToneFile"; type: "string" }
        Property { name: "clockAlarmToneFile"; type: "string" }
        Property { name: "ringerToneEnabled"; type: "bool" }
        Property { name: "messageToneEnabled"; type: "bool" }
        Property { name: "chatToneEnabled"; type: "bool" }
        Property { name: "mailToneEnabled"; type: "bool" }
        Property { name: "internetCallToneEnabled"; type: "bool" }
        Property { name: "calendarToneEnabled"; type: "bool" }
        Property { name: "clockAlarmToneEnabled"; type: "bool" }
        Signal {
            name: "profileChanged"
            Parameter { name: "profile"; type: "string" }
        }
        Signal { name: "messageToneVolumeChanged" }
    }
    Component {
        name: "QUsbMode"
        prototype: "QObject"
        Property { name: "USB_CONNECTED"; type: "string"; isReadonly: true }
        Property { name: "DATA_IN_USE"; type: "string"; isReadonly: true }
        Property { name: "USB_DISCONNECTED"; type: "string"; isReadonly: true }
        Property { name: "USB_CONNECTED_DIALOG_SHOW"; type: "string"; isReadonly: true }
        Property { name: "MODE_UNDEFINED"; type: "string"; isReadonly: true }
        Property { name: "MODE_ASK"; type: "string"; isReadonly: true }
        Property { name: "MODE_MASS_STORAGE"; type: "string"; isReadonly: true }
        Property { name: "MODE_DEVELOPER"; type: "string"; isReadonly: true }
        Property { name: "MODE_MTP"; type: "string"; isReadonly: true }
        Property { name: "MODE_HOST"; type: "string"; isReadonly: true }
        Property { name: "MODE_CONNECTION_SHARING"; type: "string"; isReadonly: true }
        Property { name: "MODE_DIAG"; type: "string"; isReadonly: true }
        Property { name: "MODE_ADB"; type: "string"; isReadonly: true }
        Property { name: "MODE_PC_SUITE"; type: "string"; isReadonly: true }
        Property { name: "MODE_CHARGING"; type: "string"; isReadonly: true }
        Property { name: "MODE_CHARGER"; type: "string"; isReadonly: true }
    }
    Component {
        name: "QUsbModed"
        prototype: "QUsbMode"
        exports: ["org.nemomobile.systemsettings/USBSettings 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "available"; type: "bool"; isReadonly: true }
        Property { name: "supportedModes"; type: "QStringList"; isReadonly: true }
        Property { name: "hiddenModes"; type: "QStringList"; isReadonly: true }
        Property { name: "currentMode"; type: "string" }
        Property { name: "configMode"; type: "string" }
        Signal {
            name: "usbStateError"
            Parameter { name: "error"; type: "string" }
        }
        Signal {
            name: "hideModeFailed"
            Parameter { name: "mode"; type: "string" }
        }
        Signal {
            name: "unhideModeFailed"
            Parameter { name: "mode"; type: "string" }
        }
        Method {
            name: "hideMode"
            type: "bool"
            Parameter { name: "mode"; type: "string" }
        }
        Method {
            name: "unhideMode"
            type: "bool"
            Parameter { name: "mode"; type: "string" }
        }
    }
}
