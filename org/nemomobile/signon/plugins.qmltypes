import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable org.nemomobile.signon 1.0'

Module {
    Component {
        name: "IdentityInterface"
        prototype: "QObject"
        exports: ["org.nemomobile.signon/Identity 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "NotStarted": 0,
                "HostResolving": 1,
                "ServerConnecting": 2,
                "DataSending": 3,
                "ReplyWaiting": 4,
                "UserPending": 5,
                "UiRefreshing": 6,
                "ProcessPending": 7,
                "SessionStarted": 8,
                "ProcessCanceling": 9,
                "ProcessDone": 10,
                "CustomState": 11,
                "Initialized": 13,
                "Initializing": 14,
                "Synced": 15,
                "SyncInProgress": 16,
                "RefreshInProgress": 17,
                "Modified": 18,
                "Error": 19,
                "Invalid": 20
            }
        }
        Enum {
            name: "SyncMode"
            values: {
                "OverwriteSecret": 0,
                "NoOverwriteSecret": 1
            }
        }
        Enum {
            name: "ErrorType"
            values: {
                "UnknownError": 1,
                "InternalServerError": 2,
                "InternalCommunicationError": 3,
                "PermissionDeniedError": 4,
                "IdentityError": 200,
                "MethodNotAvailableError": 201,
                "NotFoundError": 202,
                "StoreFailedError": 203,
                "RemoveFailedError": 204,
                "SignOutFailedError": 205,
                "CanceledError": 206,
                "CredentialsNotAvailableError": 207,
                "AuthSessionError": 300,
                "MechanismNotAvailableError": 301,
                "MissingDataError": 302,
                "InvalidCredentialsError": 303,
                "WrongStateError": 304,
                "OperationNotSupportedError": 305,
                "NoConnectionError": 306,
                "NetworkError": 307,
                "SslError": 308,
                "RuntimeError": 309,
                "TimedOutError": 311,
                "UserInteractionError": 312,
                "UserError": 400,
                "NoError": 401
            }
        }
        Property { name: "identifier"; type: "int" }
        Property { name: "identifierPending"; type: "bool" }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "statusMessage"; type: "string"; isReadonly: true }
        Property { name: "error"; type: "ErrorType"; isReadonly: true }
        Property { name: "errorMessage"; type: "string"; isReadonly: true }
        Property { name: "userName"; type: "string" }
        Property { name: "secret"; type: "string" }
        Property { name: "caption"; type: "string" }
        Property { name: "realms"; type: "QStringList" }
        Property { name: "owner"; type: "string" }
        Property { name: "accessControlList"; type: "QStringList" }
        Property { name: "methods"; type: "QStringList"; isReadonly: true }
        Signal {
            name: "responseReceived"
            Parameter { name: "data"; type: "QVariantMap" }
        }
        Signal { name: "signedOut" }
        Signal {
            name: "secretVerified"
            Parameter { name: "valid"; type: "bool" }
        }
        Signal {
            name: "userVerified"
            Parameter { name: "valid"; type: "bool" }
        }
        Method {
            name: "setMethodMechanisms"
            Parameter { name: "methodName"; type: "string" }
            Parameter { name: "mechanisms"; type: "QStringList" }
        }
        Method {
            name: "methodMechanisms"
            type: "QStringList"
            Parameter { name: "methodName"; type: "string" }
        }
        Method {
            name: "removeMethod"
            Parameter { name: "methodName"; type: "string" }
        }
        Method {
            name: "sync"
            Parameter { name: "mode"; type: "SyncMode" }
        }
        Method { name: "sync" }
        Method { name: "refresh" }
        Method { name: "remove" }
        Method {
            name: "verifySecret"
            Parameter { name: "secret"; type: "string" }
        }
        Method {
            name: "requestCredentialsUpdate"
            Parameter { name: "message"; type: "string" }
        }
        Method {
            name: "verifyUser"
            Parameter { name: "message"; type: "string" }
        }
        Method {
            name: "verifyUser"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Method {
            name: "signIn"
            type: "bool"
            Parameter { name: "methodName"; type: "string" }
            Parameter { name: "mechanism"; type: "string" }
            Parameter { name: "sessionData"; type: "QVariantMap" }
        }
        Method {
            name: "process"
            Parameter { name: "sessionData"; type: "QVariantMap" }
        }
        Method { name: "signOut" }
    }
    Component {
        name: "IdentityManagerInterface"
        prototype: "QObject"
        exports: ["org.nemomobile.signon/IdentityManager 1.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "createIdentity"; type: "IdentityInterface*" }
        Method {
            name: "removeIdentity"
            Parameter { name: "identity"; type: "IdentityInterface"; isPointer: true }
        }
        Method {
            name: "identity"
            type: "IdentityInterface*"
            Parameter { name: "identityIdentifier"; type: "string" }
        }
        Method {
            name: "addIdentityReference"
            Parameter { name: "identity"; type: "IdentityInterface"; isPointer: true }
            Parameter { name: "reference"; type: "string" }
        }
        Method {
            name: "removeIdentityReference"
            Parameter { name: "identity"; type: "IdentityInterface"; isPointer: true }
            Parameter { name: "reference"; type: "string" }
        }
    }
    Component {
        name: "ServiceAccountIdentityInterface"
        prototype: "QObject"
        exports: ["org.nemomobile.signon/ServiceAccountIdentity 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "NotStarted": 0,
                "HostResolving": 1,
                "ServerConnecting": 2,
                "DataSending": 3,
                "ReplyWaiting": 4,
                "UserPending": 5,
                "UiRefreshing": 6,
                "ProcessPending": 7,
                "SessionStarted": 8,
                "ProcessCanceling": 9,
                "ProcessDone": 10,
                "CustomState": 11,
                "Initialized": 13,
                "Initializing": 14,
                "Error": 15,
                "Invalid": 16
            }
        }
        Enum {
            name: "ErrorType"
            values: {
                "UnknownError": 1,
                "InternalServerError": 2,
                "InternalCommunicationError": 3,
                "PermissionDeniedError": 4,
                "AuthSessionError": 300,
                "MechanismNotAvailableError": 301,
                "MissingDataError": 302,
                "InvalidCredentialsError": 303,
                "WrongStateError": 304,
                "OperationNotSupportedError": 305,
                "NoConnectionError": 306,
                "NetworkError": 307,
                "SslError": 308,
                "RuntimeError": 309,
                "CanceledError": 310,
                "TimedOutError": 311,
                "UserInteractionError": 312,
                "UserError": 400,
                "NoError": 401
            }
        }
        Property { name: "identifier"; type: "int" }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "statusMessage"; type: "string"; isReadonly: true }
        Property { name: "error"; type: "ErrorType"; isReadonly: true }
        Property { name: "errorMessage"; type: "string"; isReadonly: true }
        Property { name: "methods"; type: "QStringList"; isReadonly: true }
        Signal {
            name: "responseReceived"
            Parameter { name: "data"; type: "QVariantMap" }
        }
        Signal { name: "signedOut" }
        Signal {
            name: "secretVerified"
            Parameter { name: "valid"; type: "bool" }
        }
        Signal {
            name: "userVerified"
            Parameter { name: "valid"; type: "bool" }
        }
        Method {
            name: "methodMechanisms"
            type: "QStringList"
            Parameter { name: "methodName"; type: "string" }
        }
        Method {
            name: "verifySecret"
            Parameter { name: "secret"; type: "string" }
        }
        Method {
            name: "requestCredentialsUpdate"
            Parameter { name: "message"; type: "string" }
        }
        Method {
            name: "verifyUser"
            Parameter { name: "message"; type: "string" }
        }
        Method {
            name: "verifyUser"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Method {
            name: "signIn"
            type: "bool"
            Parameter { name: "methodName"; type: "string" }
            Parameter { name: "mechanism"; type: "string" }
            Parameter { name: "sessionData"; type: "QVariantMap" }
        }
        Method {
            name: "process"
            Parameter { name: "sessionData"; type: "QVariantMap" }
        }
        Method { name: "signOut" }
    }
    Component {
        name: "SessionDataInterface"
        prototype: "QObject"
        exports: ["org.nemomobile.signon/SessionData 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "accessControlTokens"; type: "QStringList"; isReadonly: true }
        Property { name: "properties"; type: "QVariantMap" }
    }
}
