import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable org.nemomobile.alarms 1.0'

Module {
    Component {
        name: "AlarmHandlerInterface"
        prototype: "QObject"
        exports: ["org.nemomobile.alarms/AlarmHandler 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "activeDialogs"; type: "QList<QObject*>"; isReadonly: true }
        Property { name: "dialogOnScreen"; type: "bool" }
        Signal {
            name: "alarmReady"
            Parameter { name: "alarm"; type: "QObject"; isPointer: true }
        }
        Signal {
            name: "error"
            Parameter { name: "message"; type: "string" }
        }
        Signal {
            name: "visual_reminders_status"
            Parameter { name: "status"; type: "int" }
        }
    }
    Component {
        name: "AlarmObject"
        prototype: "QObject"
        exports: ["org.nemomobile.alarms/Alarm 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Type"
            values: {
                "Calendar": 0,
                "Clock": 1,
                "Countdown": 2
            }
        }
        Property { name: "title"; type: "string" }
        Property { name: "hour"; type: "int" }
        Property { name: "minute"; type: "int" }
        Property { name: "daysOfWeek"; type: "string" }
        Property { name: "enabled"; type: "bool" }
        Property { name: "id"; type: "int"; isReadonly: true }
        Property { name: "createdDate"; type: "QDateTime"; isReadonly: true }
        Property { name: "countdown"; type: "bool" }
        Property { name: "triggerTime"; type: "uint"; isReadonly: true }
        Property { name: "elapsed"; type: "int"; isReadonly: true }
        Property { name: "type"; type: "int"; isReadonly: true }
        Property { name: "startDate"; type: "QDateTime"; isReadonly: true }
        Property { name: "endDate"; type: "QDateTime"; isReadonly: true }
        Property { name: "allDay"; type: "bool"; isReadonly: true }
        Property { name: "calendarUid"; type: "string"; isReadonly: true }
        Property { name: "calendarEventUid"; type: "string"; isReadonly: true }
        Property { name: "calendarEventRecurrenceId"; type: "string"; isReadonly: true }
        Property { name: "timeoutSnoozeCounter"; type: "int"; isReadonly: true }
        Property { name: "maximalTimeoutSnoozeCount"; type: "int" }
        Signal { name: "timeChanged" }
        Signal { name: "updated" }
        Signal { name: "saved" }
        Signal { name: "deleted" }
        Method { name: "reset" }
        Method { name: "save" }
        Method { name: "deleteAlarm" }
    }
    Component {
        name: "AlarmsBackendModel"
        prototype: "QAbstractListModel"
        exports: ["org.nemomobile.alarms/AlarmsModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "populated"; type: "bool"; isReadonly: true }
        Property { name: "onlyCountdown"; type: "bool" }
        Method { name: "createAlarm"; type: "AlarmObject*" }
    }
    Component {
        name: "EnabledAlarmsProxyModel"
        prototype: "QSortFilterProxyModel"
        exports: ["org.nemomobile.alarms/EnabledAlarmsProxyModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "model"; type: "QObject"; isPointer: true }
    }
    Component {
        name: "QAbstractProxyModel"
        prototype: "QAbstractItemModel"
        Property { name: "sourceModel"; type: "QAbstractItemModel"; isPointer: true }
    }
    Component {
        name: "QSortFilterProxyModel"
        prototype: "QAbstractProxyModel"
        Property { name: "filterRegExp"; type: "QRegExp" }
        Property { name: "filterKeyColumn"; type: "int" }
        Property { name: "dynamicSortFilter"; type: "bool" }
        Property { name: "filterCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "sortCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "isSortLocaleAware"; type: "bool" }
        Property { name: "sortRole"; type: "int" }
        Property { name: "filterRole"; type: "int" }
        Method {
            name: "setFilterRegExp"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterWildcard"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterFixedString"
            Parameter { name: "pattern"; type: "string" }
        }
        Method { name: "clear" }
        Method { name: "invalidate" }
    }
}
