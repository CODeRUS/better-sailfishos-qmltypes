import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable QtDocGallery 5.0'

Module {
    Component {
        name: "QDocGallery::QDeclarativeDocumentGallery"
        prototype: "QObject"
        exports: ["QtDocGallery/DocumentGallery 5.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ItemType"
            values: {
                "InvalidType": 0,
                "File": 1,
                "Folder": 2,
                "Document": 3,
                "Text": 4,
                "Audio": 5,
                "Image": 6,
                "Video": 7,
                "Playlist": 8,
                "Artist": 9,
                "AlbumArtist": 10,
                "Album": 11,
                "AudioGenre": 12,
                "PhotoAlbum": 13
            }
        }
    }
    Component {
        name: "QDocGallery::QDeclarativeDocumentGalleryItem"
        prototype: "QDocGallery::QDeclarativeGalleryItem"
        exports: ["QtDocGallery/DocumentGalleryItem 5.0"]
        exportMetaObjectRevisions: [0]
        Property {
            name: "itemType"
            type: "QDocGallery::QDeclarativeDocumentGallery::ItemType"
            isReadonly: true
        }
    }
    Component {
        name: "QDocGallery::QDeclarativeDocumentGalleryModel"
        prototype: "QDocGallery::QDeclarativeGalleryQueryModel"
        exports: ["QtDocGallery/DocumentGalleryModel 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "rootType"; type: "QDocGallery::QDeclarativeDocumentGallery::ItemType" }
    }
    Component {
        name: "QDocGallery::QDeclarativeDocumentGalleryType"
        prototype: "QDocGallery::QDeclarativeGalleryType"
        exports: ["QtDocGallery/DocumentGalleryType 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "itemType"; type: "QDocGallery::QDeclarativeDocumentGallery::ItemType" }
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryContainsFilter"
        prototype: "QDocGallery::QDeclarativeGalleryStringFilter"
        exports: ["QtDocGallery/GalleryContainsFilter 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryEndsWithFilter"
        prototype: "QDocGallery::QDeclarativeGalleryStringFilter"
        exports: ["QtDocGallery/GalleryEndsWithFilter 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryEqualsFilter"
        prototype: "QDocGallery::QDeclarativeGalleryValueFilter"
        exports: ["QtDocGallery/GalleryEqualsFilter 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryFilterBase"
        prototype: "QObject"
        Signal { name: "filterChanged" }
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryFilterGroup"
        defaultProperty: "filters"
        prototype: "QDocGallery::QDeclarativeGalleryFilterBase"
        Property {
            name: "filters"
            type: "QDocGallery::QDeclarativeGalleryFilterBase"
            isList: true
            isReadonly: true
        }
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryFilterIntersection"
        defaultProperty: "filters"
        prototype: "QDocGallery::QDeclarativeGalleryFilterGroup"
        exports: ["QtDocGallery/GalleryFilterIntersection 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryFilterUnion"
        defaultProperty: "filters"
        prototype: "QDocGallery::QDeclarativeGalleryFilterGroup"
        exports: ["QtDocGallery/GalleryFilterUnion 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryGreaterThanEqualsFilter"
        prototype: "QDocGallery::QDeclarativeGalleryValueFilter"
        exports: ["QtDocGallery/GalleryGreaterThanEqualsFilter 0.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryGreaterThanFilter"
        prototype: "QDocGallery::QDeclarativeGalleryValueFilter"
        exports: ["QtDocGallery/GalleryGreaterThanFilter 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryItem"
        prototype: "QObject"
        Enum {
            name: "Status"
            values: {
                "Null": 0,
                "Active": 1,
                "Canceling": 2,
                "Canceled": 3,
                "Idle": 4,
                "Finished": 5,
                "Error": 6
            }
        }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "progress"; type: "float"; isReadonly: true }
        Property { name: "properties"; type: "QStringList" }
        Property { name: "autoUpdate"; type: "bool" }
        Property { name: "item"; type: "QVariant" }
        Property { name: "available"; type: "bool"; isReadonly: true }
        Property { name: "itemUrl"; type: "QUrl"; isReadonly: true }
        Property { name: "metaData"; type: "QObject"; isReadonly: true; isPointer: true }
        Signal { name: "galleryChanged" }
        Signal { name: "propertyNamesChanged" }
        Signal { name: "itemIdChanged" }
        Method { name: "reload" }
        Method { name: "cancel" }
        Method { name: "clear" }
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryLessThanEqualsFilter"
        prototype: "QDocGallery::QDeclarativeGalleryValueFilter"
        exports: ["QtDocGallery/GalleryLessThanEqualsFilter 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryLessThanFilter"
        prototype: "QDocGallery::QDeclarativeGalleryValueFilter"
        exports: ["QtDocGallery/GalleryLessThanFilter 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryQueryModel"
        prototype: "QAbstractListModel"
        Enum {
            name: "Status"
            values: {
                "Null": 0,
                "Active": 1,
                "Canceling": 2,
                "Canceled": 3,
                "Idle": 4,
                "Finished": 5,
                "Error": 6
            }
        }
        Enum {
            name: "Scope"
            values: {
                "AllDescendants": 0,
                "DirectDescendants": 1
            }
        }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "progress"; type: "float"; isReadonly: true }
        Property { name: "properties"; type: "QStringList" }
        Property { name: "sortProperties"; type: "QStringList" }
        Property { name: "autoUpdate"; type: "bool" }
        Property { name: "rootItem"; type: "QVariant" }
        Property { name: "scope"; type: "Scope" }
        Property { name: "offset"; type: "int" }
        Property { name: "limit"; type: "int" }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "filter"; type: "QDocGallery::QDeclarativeGalleryFilterBase"; isPointer: true }
        Signal { name: "propertyNamesChanged" }
        Signal { name: "sortPropertyNamesChanged" }
        Method { name: "reload" }
        Method { name: "cancel" }
        Method { name: "clear" }
        Method {
            name: "get"
            type: "QJSValue"
            Parameter { name: "index"; type: "QJSValue" }
        }
        Method {
            name: "property"
            type: "QVariant"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "property"; type: "string" }
        }
        Method {
            name: "set"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "value"; type: "QJSValue" }
        }
        Method {
            name: "setProperty"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "property"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryStartsWithFilter"
        prototype: "QDocGallery::QDeclarativeGalleryStringFilter"
        exports: ["QtDocGallery/GalleryStartsWithFilter 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryStringFilter"
        prototype: "QDocGallery::QDeclarativeGalleryFilterBase"
        Property { name: "property"; type: "string" }
        Property { name: "value"; type: "string" }
        Property { name: "negated"; type: "bool" }
        Signal { name: "propertyNameChanged" }
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryType"
        prototype: "QObject"
        Enum {
            name: "Status"
            values: {
                "Null": 0,
                "Active": 1,
                "Canceling": 2,
                "Canceled": 3,
                "Idle": 4,
                "Finished": 5,
                "Error": 6
            }
        }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "progress"; type: "float"; isReadonly: true }
        Property { name: "properties"; type: "QStringList" }
        Property { name: "autoUpdate"; type: "bool" }
        Property { name: "available"; type: "bool"; isReadonly: true }
        Property { name: "metaData"; type: "QObject"; isReadonly: true; isPointer: true }
        Signal { name: "galleryChanged" }
        Signal { name: "propertyNamesChanged" }
        Method { name: "reload" }
        Method { name: "cancel" }
        Method { name: "clear" }
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryValueFilter"
        prototype: "QDocGallery::QDeclarativeGalleryFilterBase"
        Property { name: "property"; type: "string" }
        Property { name: "value"; type: "QVariant" }
        Property { name: "negated"; type: "bool" }
        Signal { name: "propertyNameChanged" }
    }
    Component {
        name: "QDocGallery::QDeclarativeGalleryWildcardFilter"
        prototype: "QDocGallery::QDeclarativeGalleryStringFilter"
        exports: ["QtDocGallery/GalleryWildcardFilter 5.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QQmlPropertyMap"
        prototype: "QObject"
        Signal {
            name: "valueChanged"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "keys"; type: "QStringList" }
    }
}
