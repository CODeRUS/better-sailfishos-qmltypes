import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable QtSparql 1.0'

Module {
    Component { name: "QAbstractTableModel"; prototype: "QAbstractItemModel" }
    Component { name: "QSparqlConnection"; prototype: "QObject" }
    Component {
        name: "QSparqlQueryModel"
        prototype: "QAbstractTableModel"
        Signal { name: "finished" }
        Signal { name: "started" }
    }
    Component {
        name: "QSparqlResultsList"
        defaultProperty: "query"
        prototype: "QAbstractListModel"
        exports: ["QtSparql/SparqlResultsList 0.1"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Null": 0,
                "Ready": 1,
                "Loading": 2,
                "Error": 3
            }
        }
        Property { name: "options"; type: "SparqlConnectionOptions"; isPointer: true }
        Property { name: "query"; type: "string" }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Signal { name: "finished" }
        Signal {
            name: "statusChanged"
            Parameter { type: "QSparqlResultsList::Status" }
        }
        Method { name: "reload" }
        Method { name: "errorString"; type: "string" }
    }
    Component {
        name: "SparqlConnection"
        defaultProperty: "driver"
        prototype: "QSparqlConnection"
        exports: ["QtSparql/SparqlConnection 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Null": 0,
                "Ready": 1,
                "Loading": 2,
                "Error": 3
            }
        }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "driver"; type: "string" }
        Property { name: "result"; type: "QVariant"; isReadonly: true }
        Property { name: "options"; type: "SparqlConnectionOptions"; isPointer: true }
        Signal {
            name: "statusChanged"
            Parameter { type: "SparqlConnection::Status" }
        }
        Signal {
            name: "resultReady"
            Parameter { type: "QVariant" }
        }
        Signal { name: "onCompleted" }
        Method {
            name: "select"
            type: "QVariant"
            Parameter { name: "query"; type: "string" }
            Parameter { name: "async"; type: "bool" }
        }
        Method {
            name: "select"
            type: "QVariant"
            Parameter { name: "query"; type: "string" }
        }
        Method {
            name: "select"
            type: "QVariant"
            Parameter { name: "query"; type: "string" }
            Parameter { name: "boundValues"; type: "QVariant" }
            Parameter { name: "async"; type: "bool" }
        }
        Method {
            name: "select"
            type: "QVariant"
            Parameter { name: "query"; type: "string" }
            Parameter { name: "boundValues"; type: "QVariant" }
        }
        Method {
            name: "ask"
            type: "QVariant"
            Parameter { name: "query"; type: "string" }
            Parameter { name: "async"; type: "bool" }
        }
        Method {
            name: "ask"
            type: "QVariant"
            Parameter { name: "query"; type: "string" }
        }
        Method {
            name: "ask"
            type: "QVariant"
            Parameter { name: "query"; type: "string" }
            Parameter { name: "boundValues"; type: "QVariant" }
            Parameter { name: "async"; type: "bool" }
        }
        Method {
            name: "ask"
            type: "QVariant"
            Parameter { name: "query"; type: "string" }
            Parameter { name: "boundValues"; type: "QVariant" }
        }
        Method {
            name: "update"
            type: "QVariant"
            Parameter { name: "query"; type: "string" }
            Parameter { name: "async"; type: "bool" }
        }
        Method {
            name: "update"
            type: "QVariant"
            Parameter { name: "query"; type: "string" }
        }
        Method {
            name: "update"
            type: "QVariant"
            Parameter { name: "query"; type: "string" }
            Parameter { name: "boundValues"; type: "QVariant" }
            Parameter { name: "async"; type: "bool" }
        }
        Method {
            name: "update"
            type: "QVariant"
            Parameter { name: "query"; type: "string" }
            Parameter { name: "boundValues"; type: "QVariant" }
        }
        Method {
            name: "construct"
            type: "QVariant"
            Parameter { name: "query"; type: "string" }
            Parameter { name: "async"; type: "bool" }
        }
        Method {
            name: "construct"
            type: "QVariant"
            Parameter { name: "query"; type: "string" }
        }
        Method {
            name: "construct"
            type: "QVariant"
            Parameter { name: "query"; type: "string" }
            Parameter { name: "boundValues"; type: "QVariant" }
            Parameter { name: "async"; type: "bool" }
        }
        Method {
            name: "construct"
            type: "QVariant"
            Parameter { name: "query"; type: "string" }
            Parameter { name: "boundValues"; type: "QVariant" }
        }
        Method { name: "errorString"; type: "string" }
    }
    Component {
        name: "SparqlConnectionOptions"
        prototype: "QObject"
        exports: [
            "QtSparql/SparqlConnectionOptions 0.1",
            "QtSparql/SparqlConnectionOptions 1.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "databaseName"; type: "string" }
        Property { name: "userName"; type: "string" }
        Property { name: "password"; type: "string" }
        Property { name: "hostName"; type: "string" }
        Property { name: "path"; type: "string" }
        Property { name: "port"; type: "int" }
        Property { name: "driverName"; type: "string" }
    }
    Component {
        name: "SparqlListModel"
        defaultProperty: "query"
        prototype: "QSparqlQueryModel"
        exports: ["QtSparql/SparqlListModel 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Null": 0,
                "Ready": 1,
                "Loading": 2,
                "Error": 3
            }
        }
        Property { name: "query"; type: "string" }
        Property { name: "connection"; type: "SparqlConnection"; isPointer: true }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Signal {
            name: "statusChanged"
            Parameter { type: "SparqlListModel::Status" }
        }
        Method { name: "errorString"; type: "string" }
        Method {
            name: "get"
            type: "QVariant"
            Parameter { name: "rowNumber"; type: "int" }
        }
        Method { name: "reload" }
    }
}
