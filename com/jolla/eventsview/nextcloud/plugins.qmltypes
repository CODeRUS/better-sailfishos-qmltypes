import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable -noinstantiate -dependencies dependencies/empty.json com.jolla.eventsview.nextcloud 1.0'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "NextcloudEventCache"
        prototype: "SyncCache::EventCache"
        exports: ["com.jolla.eventsview.nextcloud/NextcloudEventCache 1.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "NextcloudEventImageDownloader"
        prototype: "QObject"
        exports: [
            "com.jolla.eventsview.nextcloud/NextcloudEventImageDownloader 1.0"
        ]
        exportMetaObjectRevisions: [0]
        Property { name: "eventCache"; type: "SyncCache::EventCache"; isPointer: true }
        Property { name: "accountId"; type: "int" }
        Property { name: "eventId"; type: "string" }
        Property { name: "imagePath"; type: "QUrl"; isReadonly: true }
    }
    Component {
        name: "NextcloudEventModel"
        prototype: "QAbstractListModel"
        exports: ["com.jolla.eventsview.nextcloud/NextcloudEventModel 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Action"
            values: {
                "DeleteEvent": 1,
                "DeleteAllEvents": 2
            }
        }
        Enum {
            name: "Actions"
            values: {
                "DeleteEvent": 1,
                "DeleteAllEvents": 2
            }
        }
        Enum {
            name: "Roles"
            values: {
                "AccountIdRole": 257,
                "EventIdRole": 258,
                "EventSubjectRole": 259,
                "EventTextRole": 260,
                "EventUrlRole": 261,
                "ImageUrlRole": 262,
                "ImagePathRole": 263,
                "TimestampRole": 264,
                "DeletedLocallyRole": 265
            }
        }
        Property { name: "eventCache"; type: "SyncCache::EventCache"; isPointer: true }
        Property { name: "accountId"; type: "int" }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "supportedActions"; type: "Actions"; isReadonly: true }
        Signal { name: "rowCountChanged" }
        Method {
            name: "at"
            type: "QVariantMap"
            Parameter { name: "row"; type: "int" }
        }
        Method { name: "refresh" }
        Method {
            name: "deleteEventAt"
            Parameter { name: "row"; type: "int" }
        }
        Method { name: "deleteAllEvents" }
    }
    Component {
        name: "SyncCache::EventCache"
        prototype: "QObject"
        Signal {
            name: "openDatabaseFailed"
            Parameter { name: "errorMessage"; type: "string" }
        }
        Signal { name: "openDatabaseFinished" }
        Signal {
            name: "requestEventsFailed"
            Parameter { name: "accountId"; type: "int" }
            Parameter { name: "errorMessage"; type: "string" }
        }
        Signal {
            name: "requestEventsFinished"
            Parameter { name: "accountId"; type: "int" }
            Parameter { name: "events"; type: "QVector<SyncCache::Event>" }
        }
        Signal {
            name: "deleteEventFailed"
            Parameter { name: "accountId"; type: "int" }
            Parameter { name: "eventId"; type: "string" }
            Parameter { name: "errorMessage"; type: "string" }
        }
        Signal {
            name: "deleteEventFinished"
            Parameter { name: "accountId"; type: "int" }
            Parameter { name: "eventId"; type: "string" }
        }
        Signal {
            name: "flagEventForDeletionFailed"
            Parameter { name: "accountId"; type: "int" }
            Parameter { name: "eventId"; type: "string" }
            Parameter { name: "errorMessage"; type: "string" }
        }
        Signal {
            name: "flagEventForDeletionFinished"
            Parameter { name: "accountId"; type: "int" }
            Parameter { name: "eventId"; type: "string" }
        }
        Signal {
            name: "populateEventImageFailed"
            Parameter { name: "idempToken"; type: "int" }
            Parameter { name: "errorMessage"; type: "string" }
        }
        Signal {
            name: "populateEventImageFinished"
            Parameter { name: "idempToken"; type: "int" }
            Parameter { name: "path"; type: "string" }
        }
        Signal {
            name: "eventsStored"
            Parameter { name: "photos"; type: "QVector<SyncCache::Event>" }
        }
        Signal {
            name: "eventsDeleted"
            Parameter { name: "photos"; type: "QVector<SyncCache::Event>" }
        }
        Signal {
            name: "eventsFlaggedForDeletion"
            Parameter { name: "events"; type: "QVector<SyncCache::Event>" }
        }
        Method {
            name: "openDatabase"
            Parameter { name: "accountType"; type: "string" }
        }
        Method {
            name: "requestEvents"
            Parameter { name: "accountId"; type: "int" }
            Parameter { name: "includeLocallyDeleted"; type: "bool" }
        }
        Method {
            name: "requestEvents"
            Parameter { name: "accountId"; type: "int" }
        }
        Method {
            name: "deleteEvent"
            Parameter { name: "accountId"; type: "int" }
            Parameter { name: "eventId"; type: "string" }
        }
        Method {
            name: "flagEventForDeletion"
            Parameter { name: "accountId"; type: "int" }
            Parameter { name: "eventId"; type: "string" }
        }
        Method {
            name: "populateEventImage"
            Parameter { name: "idempToken"; type: "int" }
            Parameter { name: "accountId"; type: "int" }
            Parameter { name: "eventId"; type: "string" }
            Parameter { name: "requestTemplate"; type: "QNetworkRequest" }
        }
    }
}
