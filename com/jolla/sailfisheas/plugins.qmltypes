import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable -noinstantiate -dependencies /home/nemo/qmlexport/empty.json com.jolla.sailfisheas 1.0'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "AutoDiscovery"
        prototype: "QObject"
        exports: ["com.jolla.sailfisheas/AutoDiscovery 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "AutoDiscoveryError"
            values: {
                "AUTODISCOVERY_ERROR_NONE": 0,
                "AUTODISCOVERY_ERROR_INPUT": 1,
                "AUTODISCOVERY_ERROR_INTERNAL": 2,
                "AUTODISCOVERY_ERROR_NOT_SUPPORTED": 3,
                "AUTODISCOVERY_ERROR_CANCELED": 4,
                "AUTODISCOVERY_ERROR_SLL_HANDSHAKE": 5,
                "AUTODISCOVERY_ERROR_NETWORK": 6
            }
        }
        Property { name: "server"; type: "string"; isReadonly: true }
        Property { name: "uriPath"; type: "string"; isReadonly: true }
        Property { name: "port"; type: "int"; isReadonly: true }
        Property { name: "secureConnection"; type: "bool"; isReadonly: true }
        Property { name: "userName"; type: "string" }
        Property { name: "domain"; type: "string" }
        Signal { name: "autoDiscoveryDone" }
        Signal {
            name: "autoDiscoveryFailed"
            Parameter { name: "error"; type: "int" }
        }
        Signal {
            name: "userNameChanged"
            Parameter { name: "newName"; type: "string" }
        }
        Signal {
            name: "domainChanged"
            Parameter { name: "newDomain"; type: "string" }
        }
        Method {
            name: "startAutoDiscovery"
            Parameter { name: "email"; type: "string" }
            Parameter { name: "password"; type: "string" }
        }
        Method { name: "cancelAutoDiscovery" }
    }
    Component {
        name: "CheckCredentials"
        prototype: "QObject"
        exports: ["com.jolla.sailfisheas/CheckCredentials 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "CheckCredentialsError"
            values: {
                "CHECKCREDENTIALS_ERROR_NONE": 0,
                "CHECKCREDENTIALS_ERROR_INPUT": 1,
                "CHECKCREDENTIALS_ERROR_INTERNAL": 2,
                "CHECKCREDENTIALS_ERROR_CANCELED": 3,
                "CHECKCREDENTIALS_ERROR_AUTH": 4,
                "CHECKCREDENTIALS_ERROR_PROTOCOL": 5,
                "CHECKCREDENTIALS_ERROR_SLL_HANDSHAKE": 6,
                "CHECKCREDENTIALS_ERROR_NETWORK": 7
            }
        }
        Signal { name: "checkCredentialsDone" }
        Signal {
            name: "checkCredentialsFailed"
            Parameter { name: "error"; type: "int" }
        }
        Method {
            name: "checkCredentials"
            Parameter { name: "user"; type: "string" }
            Parameter { name: "password"; type: "string" }
            Parameter { name: "host"; type: "string" }
            Parameter { name: "port"; type: "int" }
            Parameter { name: "isSecure"; type: "bool" }
            Parameter { name: "domain"; type: "string" }
            Parameter { name: "ignoreSSLErrors"; type: "bool" }
        }
        Method { name: "cancelCheck" }
    }
    Component {
        name: "CheckExistence"
        prototype: "QObject"
        exports: ["com.jolla.sailfisheas/CheckExistence 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "alreadyCreated"
            type: "bool"
            Parameter { name: "username"; type: "string" }
            Parameter { name: "server"; type: "string" }
            Parameter { name: "domain"; type: "string" }
        }
        Method {
            name: "knownEmail"
            type: "bool"
            Parameter { name: "email"; type: "string" }
        }
    }
    Component {
        name: "CheckProvision"
        prototype: "QObject"
        exports: ["com.jolla.sailfisheas/CheckProvision 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ProvisionStatus"
            values: {
                "PROVISION_POLICY_NOT_SET": 0,
                "PROVISION_POLICY_NOT_REQUIRED": 1,
                "PROVISION_POLICY_REQUIRED_NOT_ENABLED": 2,
                "PROVISION_POLICY_REQUIRED_SUCCESS": 3,
                "PROVISION_POLICY_REQUIRED_FAILED": 4,
                "PROVISION_POLICY_REQUIRED_NOT_IMPLEMENTED": 5
            }
        }
        Enum {
            name: "CheckProvisionError"
            values: {
                "CHECKPROVISION_ERROR_SYSTEM": 0,
                "CHECKPROVISION_ERROR_PROTOCOL": 1,
                "CHECKPROVISION_ERROR_NETWORK": 2
            }
        }
        Property { name: "provisionStatus"; type: "ProvisionStatus"; isReadonly: true }
        Property { name: "devicePassword"; type: "bool"; isReadonly: true }
        Property { name: "alphanumericDevicePassword"; type: "bool"; isReadonly: true }
        Property { name: "minPasswordLength"; type: "int"; isReadonly: true }
        Property { name: "minPasswordComplexCharacters"; type: "int"; isReadonly: true }
        Property { name: "maxInactivityTimeDeviceLock"; type: "int"; isReadonly: true }
        Signal { name: "checkProvisionDone" }
        Signal {
            name: "checkProvisionFailed"
            Parameter { name: "error"; type: "int" }
        }
        Method {
            name: "checkSettings"
            Parameter { name: "accountId"; type: "int" }
        }
        Method { name: "cancelCheck" }
    }
    Component {
        name: "OofSettings"
        prototype: "QObject"
        exports: ["com.jolla.sailfisheas/OofSettings 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "State"
            values: {
                "Idle": 0,
                "Getting": 1,
                "Setting": 2
            }
        }
        Property { name: "state"; type: "int"; isReadonly: true }
        Property { name: "oofEnabled"; type: "bool" }
        Property { name: "timeRangeEnabled"; type: "bool" }
        Property { name: "startTime"; type: "QDateTime" }
        Property { name: "endTime"; type: "QDateTime" }
        Property { name: "internalMessage"; type: "string" }
        Property { name: "externalMessageEnabled"; type: "bool" }
        Property { name: "externalMessageToAnyone"; type: "bool" }
        Property { name: "externalMessage"; type: "string" }
        Signal {
            name: "retrieveOofSettingsCompleted"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "sendSettingsCompleted"
            Parameter { name: "success"; type: "bool" }
        }
        Method {
            name: "retrieveOofSettings"
            Parameter { name: "accountId"; type: "qulonglong" }
        }
        Method {
            name: "sendOofSettings"
            Parameter { name: "accountId"; type: "qulonglong" }
        }
        Method { name: "cancel" }
    }
}
