import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable -noinstantiate -dependencies /home/nemo/qmlexport/empty.json com.jolla.camera 1.0'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "CaptureModel"
        prototype: "QAbstractListModel"
        exports: ["com.jolla.camera/CaptureModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QObject"; isPointer: true }
        Property { name: "count"; type: "int"; isReadonly: true }
        Method {
            name: "appendCapture"
            Parameter { name: "url"; type: "QUrl" }
            Parameter { name: "mimeType"; type: "string" }
            Parameter { name: "orientation"; type: "int" }
            Parameter { name: "duration"; type: "qlonglong" }
            Parameter { name: "resolution"; type: "QSize" }
        }
        Method {
            name: "deleteFile"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "DeclarativeCameraExtensions"
        prototype: "QObject"
        exports: ["com.jolla.camera/CameraExtensions 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "disableNotifications"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
            Parameter { name: "disable"; type: "bool" }
        }
    }
    Component {
        name: "DeclarativeSettings"
        prototype: "QObject"
        exports: [
            "com.jolla.camera/Settings 1.0",
            "com.jolla.camera/SettingsBase 1.0"
        ]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0, 0]
        Enum {
            name: "StoragePathStatus"
            values: {
                "NotSet": 0,
                "Unavailable": 1,
                "Mounting": 2,
                "Available": 3
            }
        }
        Property { name: "photoDirectory"; type: "string"; isReadonly: true }
        Property { name: "videoDirectory"; type: "string"; isReadonly: true }
        Property { name: "storagePath"; type: "string" }
        Property { name: "storagePathStatus"; type: "StoragePathStatus"; isReadonly: true }
        Property { name: "locationEnabled"; type: "bool"; isReadonly: true }
        Method { name: "updateLocation" }
        Method {
            name: "photoCapturePath"
            type: "string"
            Parameter { name: "extension"; type: "string" }
        }
        Method {
            name: "videoCapturePath"
            type: "string"
            Parameter { name: "extension"; type: "string" }
        }
        Method {
            name: "completeCapture"
            type: "QUrl"
            Parameter { name: "file"; type: "QUrl" }
        }
    }
}
