import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable com.jolla.settings.system 1.0'

Module {
    Component {
        name: "BluetoothInfo"
        prototype: "QObject"
        exports: ["com.jolla.settings.system/BluetoothInfo 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "adapterAddress"; type: "string"; isReadonly: true }
    }
    Component {
        name: "DeviceLockSettings"
        prototype: "QObject"
        exports: ["com.jolla.settings.system/DeviceLockSettings 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "automaticLocking"; type: "string"; isReadonly: true }
        Property { name: "maximumAttempts"; type: "string"; isReadonly: true }
        Property { name: "peekingAllowed"; type: "string"; isReadonly: true }
        Property { name: "sideloadingAllowed"; type: "string"; isReadonly: true }
        Property { name: "showNotification"; type: "string"; isReadonly: true }
        Property { name: "codeMaxLength"; type: "string"; isReadonly: true }
        Property { name: "codeMinLength"; type: "string"; isReadonly: true }
        Property { name: "codeCurrentLength"; type: "string"; isReadonly: true }
        Property { name: "codeCurrentIsDigitOnly"; type: "bool"; isReadonly: true }
        Property { name: "codeInputIsKeyboard"; type: "bool"; isReadonly: true }
        Method {
            name: "setAutomaticLocking"
            type: "bool"
            Parameter { name: "code"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "setMaximumAttempts"
            type: "bool"
            Parameter { name: "code"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "setPeekingAllowed"
            type: "bool"
            Parameter { name: "code"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "setSideloadingAllowed"
            type: "bool"
            Parameter { name: "code"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "setShowNotification"
            type: "bool"
            Parameter { name: "code"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "setInputIsKeyboard"
            type: "bool"
            Parameter { name: "code"; type: "string" }
            Parameter { name: "value"; type: "bool" }
        }
    }
    Component {
        name: "EventsWidgetsModel"
        prototype: "QAbstractListModel"
        exports: ["com.jolla.settings.system/EventsWidgetsModel 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "enableWidget"
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "disableWidget"
            Parameter { name: "path"; type: "string" }
        }
        Method { name: "updateAvailable" }
    }
    Component {
        name: "HwSettings"
        prototype: "QObject"
        exports: ["com.jolla.settings.system/HwSettings 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "features"; type: "QStringList"; isReadonly: true }
        Method {
            name: "hasFeature"
            type: "bool"
            Parameter { name: "feature"; type: "string" }
        }
    }
    Component {
        name: "LocationSettings"
        prototype: "QObject"
        exports: ["com.jolla.settings.system/LocationSettings 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "HereState"
            values: {
                "HereNotAccepted": 0,
                "HereDisabled": 1,
                "HereEnabled": 2
            }
        }
        Property { name: "agreementText"; type: "string"; isReadonly: true }
        Property { name: "locationEnabled"; type: "bool" }
        Property { name: "hereState"; type: "HereState" }
        Property { name: "hereAvailable"; type: "bool"; isReadonly: true }
        Property { name: "cellIdPositioningEnabled"; type: "bool" }
        Property { name: "cellIdPositioningAvailable"; type: "bool"; isReadonly: true }
    }
    Component {
        name: "MemoryCardFormatter"
        prototype: "QObject"
        exports: ["com.jolla.settings.system/MemoryCardFormatter 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Idle": 0,
                "Unmounting": 1,
                "Formatting": 2,
                "RemovingFiles": 3,
                "Mounting": 4,
                "Probing": 5,
                "Error": 6
            }
        }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "devicePath"; type: "string" }
        Property { name: "filesystemType"; type: "string"; isReadonly: true }
        Property { name: "supportedFormatTypes"; type: "QStringList"; isReadonly: true }
        Property { name: "busy"; type: "bool"; isReadonly: true }
        Method {
            name: "format"
            Parameter { name: "type"; type: "string" }
        }
        Method { name: "removeAllFiles" }
        Method { name: "mount" }
        Method { name: "unmount" }
    }
    Component {
        name: "QuickActionsModel"
        prototype: "QAbstractListModel"
        exports: ["com.jolla.settings.system/QuickActionsModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "showPotential"; type: "bool" }
        Property { name: "count"; type: "int"; isReadonly: true }
        Method {
            name: "enableAction"
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "disableAction"
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "move"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "newIndex"; type: "int" }
        }
        Method {
            name: "get"
            type: "QVariantMap"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "triggerAction"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "TextFileReader"
        prototype: "QObject"
        exports: ["com.jolla.settings.system/TextFileReader 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Method {
            name: "readContent"
            type: "string"
            Parameter { name: "filePath"; type: "string" }
        }
    }
    Component {
        name: "TitlesView"
        prototype: "QObject"
        exports: ["com.jolla.settings.system/TitlesView 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "model"; type: "QObject"; isPointer: true }
        Property { name: "matchRole"; type: "string" }
        Property { name: "match"; type: "QVariant" }
        Property { name: "role"; type: "string" }
        Property { name: "value"; type: "string"; isReadonly: true }
        Property { name: "values"; type: "QStringList"; isReadonly: true }
        Method {
            name: "joined"
            type: "string"
            Parameter { name: "list"; type: "QStringList" }
        }
    }
    Component {
        name: "TohInfo"
        prototype: "QObject"
        exports: ["com.jolla.settings.system/TohInfo 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "tohId"; type: "string"; isReadonly: true }
        Property { name: "tohReady"; type: "bool"; isReadonly: true }
    }
}
