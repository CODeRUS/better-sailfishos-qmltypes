import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable -noinstantiate -dependencies /home/nemo/qmlexport/empty.json com.jolla.xt9cp 1.0'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "Xt9CpModel"
        prototype: "QAbstractListModel"
        exports: ["com.jolla.xt9cp/Xt9CpModel 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ShiftState"
            values: {
                "NoShift": 0,
                "ShiftLatched": 1,
                "ShiftLocked": 2
            }
        }
        Property { name: "inputString"; type: "string" }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "fetchCount"; type: "int" }
        Property { name: "maxCount"; type: "int"; isReadonly: true }
        Property { name: "mohuEnabled"; type: "bool" }
        Property { name: "inputMode"; type: "string" }
        Property { name: "inputMethod"; type: "string" }
        Signal { name: "shiftStateChanged" }
        Method {
            name: "processSymbol"
            type: "bool"
            Parameter { name: "symbol"; type: "string" }
        }
        Method { name: "processBackspace" }
        Method { name: "resetState" }
        Method { name: "firstCandidate"; type: "string" }
        Method {
            name: "setContext"
            Parameter { name: "context"; type: "string" }
        }
        Method {
            name: "acceptPhrase"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "phraseCandidates"
            type: "QStringList"
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "isLetter"
            type: "bool"
            Parameter { name: "input"; type: "string" }
        }
        Method {
            name: "isStrokeSymbol"
            type: "bool"
            Parameter { name: "input"; type: "string" }
        }
    }
}
