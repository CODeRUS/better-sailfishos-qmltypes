import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable -noinstantiate Qt5Mozilla 1.0'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "QMozReturnValue"
        prototype: "QObject"
        exports: ["Qt5Mozilla/QMozReturnValue 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "message"; type: "QVariant" }
    }
    Component {
        name: "QMozScrollDecorator"
        prototype: "QObject"
        exports: ["Qt5Mozilla/QmlMozScrollDecorator 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "position"; type: "int"; isReadonly: true }
        Property { name: "size"; type: "int"; isReadonly: true }
        Property { name: "moving"; type: "bool"; isReadonly: true }
    }
    Component {
        name: "QmlMozContext"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Qt5Mozilla/QmlMozContext 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "instance"; type: "QObject"; isReadonly: true; isPointer: true }
        Method {
            name: "waitLoop"
            Parameter { name: "mayWait"; type: "bool" }
            Parameter { name: "aTimeout"; type: "int" }
        }
        Method {
            name: "waitLoop"
            Parameter { name: "mayWait"; type: "bool" }
        }
        Method { name: "waitLoop" }
        Method {
            name: "dumpTS"
            Parameter { name: "msg"; type: "string" }
        }
        Method {
            name: "getenv"
            type: "string"
            Parameter { name: "envVarName"; type: "string" }
        }
    }
    Component {
        name: "QuickMozView"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Qt5Mozilla/QmlMozView 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "parentId"; type: "int" }
        Property { name: "privateMode"; type: "bool" }
        Property { name: "active"; type: "bool" }
        Property { name: "background"; type: "bool"; isReadonly: true }
        Property { name: "loaded"; type: "bool"; isReadonly: true }
        Property { name: "child"; type: "QObject"; isReadonly: true; isPointer: true }
        Property { name: "url"; type: "QUrl" }
        Property { name: "title"; type: "string"; isReadonly: true }
        Property { name: "canGoBack"; type: "bool"; isReadonly: true }
        Property { name: "canGoForward"; type: "bool"; isReadonly: true }
        Property { name: "loadProgress"; type: "int"; isReadonly: true }
        Property { name: "loading"; type: "bool"; isReadonly: true }
        Property { name: "contentRect"; type: "QRectF"; isReadonly: true }
        Property { name: "contentWidth"; type: "float"; isReadonly: true }
        Property { name: "contentHeight"; type: "float"; isReadonly: true }
        Property { name: "scrollableSize"; type: "QSizeF"; isReadonly: true }
        Property { name: "scrollableOffset"; type: "QPointF"; isReadonly: true }
        Property { name: "atXBeginning"; type: "bool"; isReadonly: true }
        Property { name: "atXEnd"; type: "bool"; isReadonly: true }
        Property { name: "atYBeginning"; type: "bool"; isReadonly: true }
        Property { name: "atYEnd"; type: "bool"; isReadonly: true }
        Property { name: "resolution"; type: "float"; isReadonly: true }
        Property { name: "painted"; type: "bool"; isReadonly: true }
        Property { name: "bgcolor"; type: "QColor"; isReadonly: true }
        Property { name: "useQmlMouse"; type: "bool" }
        Property { name: "dragging"; type: "bool"; isReadonly: true }
        Property { name: "moving"; type: "bool"; isReadonly: true }
        Property { name: "pinching"; type: "bool"; isReadonly: true }
        Property {
            name: "verticalScrollDecorator"
            type: "QMozScrollDecorator"
            isReadonly: true
            isPointer: true
        }
        Property {
            name: "horizontalScrollDecorator"
            type: "QMozScrollDecorator"
            isReadonly: true
            isPointer: true
        }
        Property { name: "chrome"; type: "bool" }
        Property { name: "chromeGestureEnabled"; type: "bool" }
        Property { name: "chromeGestureThreshold"; type: "float" }
        Signal {
            name: "setIsActive"
            Parameter { type: "bool" }
        }
        Signal { name: "dispatchItemUpdate" }
        Signal {
            name: "textureReady"
            Parameter { name: "id"; type: "int" }
            Parameter { name: "bounds"; type: "QRectF" }
            Parameter { name: "orientation"; type: "int" }
        }
        Signal { name: "followItemGeometryChanged" }
        Signal { name: "viewInitialized" }
        Signal { name: "viewDestroyed" }
        Signal { name: "windowCloseRequested" }
        Signal {
            name: "recvAsyncMessage"
            Parameter { name: "message"; type: "string" }
            Parameter { name: "data"; type: "QVariant" }
        }
        Signal {
            name: "recvSyncMessage"
            type: "bool"
            Parameter { name: "message"; type: "string" }
            Parameter { name: "data"; type: "QVariant" }
            Parameter { name: "response"; type: "QMozReturnValue"; isPointer: true }
        }
        Signal { name: "loadRedirect" }
        Signal {
            name: "securityChanged"
            Parameter { name: "status"; type: "string" }
            Parameter { name: "state"; type: "uint" }
        }
        Signal {
            name: "firstPaint"
            Parameter { name: "offx"; type: "int" }
            Parameter { name: "offy"; type: "int" }
        }
        Signal {
            name: "contentLoaded"
            Parameter { name: "docuri"; type: "string" }
        }
        Signal { name: "viewAreaChanged" }
        Signal {
            name: "handleLongTap"
            Parameter { name: "point"; type: "QPoint" }
            Parameter { name: "retval"; type: "QMozReturnValue"; isPointer: true }
        }
        Signal {
            name: "handleSingleTap"
            Parameter { name: "point"; type: "QPoint" }
            Parameter { name: "retval"; type: "QMozReturnValue"; isPointer: true }
        }
        Signal {
            name: "handleDoubleTap"
            Parameter { name: "point"; type: "QPoint" }
            Parameter { name: "retval"; type: "QMozReturnValue"; isPointer: true }
        }
        Signal {
            name: "imeNotification"
            Parameter { name: "state"; type: "int" }
            Parameter { name: "open"; type: "bool" }
            Parameter { name: "cause"; type: "int" }
            Parameter { name: "focusChange"; type: "int" }
            Parameter { name: "type"; type: "string" }
        }
        Signal { name: "bgColorChanged" }
        Signal {
            name: "useQmlMouse"
            Parameter { name: "value"; type: "bool" }
        }
        Signal { name: "marginsChanged" }
        Method {
            name: "loadHtml"
            Parameter { name: "html"; type: "string" }
            Parameter { name: "baseUrl"; type: "QUrl" }
        }
        Method {
            name: "loadHtml"
            Parameter { name: "html"; type: "string" }
        }
        Method { name: "goBack" }
        Method { name: "goForward" }
        Method { name: "stop" }
        Method { name: "reload" }
        Method {
            name: "load"
            Parameter { type: "string" }
        }
        Method {
            name: "sendAsyncMessage"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "variant"; type: "QVariant" }
        }
        Method {
            name: "addMessageListener"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "addMessageListeners"
            Parameter { name: "messageNamesList"; type: "QStringList" }
        }
        Method {
            name: "loadFrameScript"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "newWindow"
            Parameter { name: "url"; type: "string" }
        }
        Method { name: "newWindow" }
        Method { name: "uniqueID"; type: "uint" }
        Method {
            name: "setParentID"
            Parameter { name: "aParentID"; type: "uint" }
        }
        Method {
            name: "synthTouchBegin"
            Parameter { name: "touches"; type: "QVariant" }
        }
        Method {
            name: "synthTouchMove"
            Parameter { name: "touches"; type: "QVariant" }
        }
        Method {
            name: "synthTouchEnd"
            Parameter { name: "touches"; type: "QVariant" }
        }
        Method { name: "suspendView" }
        Method { name: "resumeView" }
        Method {
            name: "recvMouseMove"
            Parameter { name: "posX"; type: "int" }
            Parameter { name: "posY"; type: "int" }
        }
        Method {
            name: "recvMousePress"
            Parameter { name: "posX"; type: "int" }
            Parameter { name: "posY"; type: "int" }
        }
        Method {
            name: "recvMouseRelease"
            Parameter { name: "posX"; type: "int" }
            Parameter { name: "posY"; type: "int" }
        }
        Method {
            name: "setInputMethodHints"
            Parameter { name: "hints"; type: "Qt::InputMethodHints" }
        }
        Method {
            name: "updateGLContextInfo"
            Parameter { type: "QOpenGLContext"; isPointer: true }
        }
        Method {
            name: "scrollTo"
            Parameter { name: "x"; type: "int" }
            Parameter { name: "y"; type: "int" }
        }
        Method {
            name: "scrollBy"
            Parameter { name: "x"; type: "int" }
            Parameter { name: "y"; type: "int" }
        }
        Method {
            name: "updateContentSize"
            Parameter { name: "size"; type: "QSizeF" }
        }
    }
}
