import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable -noinstantiate Sailfish.Vault 1.0'

Module {
    dependencies: [
        "MeeGo.Connman 0.2",
        "Nemo.DBus 2.0",
        "NemoMobile.Vault 1.0",
        "QtQuick 2.6",
        "QtQuick.Window 2.1",
        "QtWebKit 3.0",
        "QtWebKit.experimental 1.0",
        "Sailfish.Accounts 1.0",
        "Sailfish.Silica 1.0",
        "Sailfish.Silica.private 1.0",
        "org.nemomobile.configuration 1.0",
        "org.nemomobile.systemsettings 1.0",
        "org.nemomobile.thumbnailer 1.0"
    ]
    Component {
        name: "BackupUtils"
        prototype: "QObject"
        exports: ["Sailfish.Vault/BackupUtils 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ArchiveType"
            values: {
                "TarArchive": 0,
                "TarGzipArchive": 1
            }
        }
        Method {
            name: "newBackupFileName"
            type: "string"
            Parameter { name: "archiveType"; type: "ArchiveType" }
            Parameter { name: "dateTime"; type: "QDateTime" }
        }
        Method {
            name: "newBackupFileName"
            type: "string"
            Parameter { name: "archiveType"; type: "ArchiveType" }
        }
        Method {
            name: "sortedBackupFileInfo"
            type: "QVariantList"
            Parameter { name: "dirOrFileList"; type: "QVariant" }
        }
        Method {
            name: "vaultDumpFileId"
            type: "string"
            Parameter { name: "dirPath"; type: "string" }
        }
        Method { name: "cleanVaultSnapshotDirectory"; type: "string" }
        Method {
            name: "verifyWritable"
            type: "bool"
            Parameter { name: "path"; type: "string" }
        }
        Method { name: "backupDeviceName"; type: "string" }
        Method {
            name: "removeFile"
            Parameter { name: "filePath"; type: "string" }
        }
        Method {
            name: "createDirectory"
            type: "string"
            Parameter { name: "subDir"; type: "string" }
            Parameter { name: "baseDir"; type: "string" }
        }
        Method {
            name: "createDirectory"
            type: "string"
            Parameter { name: "subDir"; type: "string" }
        }
        Method {
            name: "removeDirectory"
            Parameter { name: "dirPath"; type: "string" }
        }
        Method {
            name: "privilegedBackupDirectory"
            type: "string"
            Parameter { name: "subDir"; type: "string" }
        }
        Method {
            name: "dateTimeFromIsoString"
            type: "QDateTime"
            Parameter { name: "isoString"; type: "string" }
        }
        Method { name: "checkCloudAccountServiceAvailable"; type: "bool" }
    }
    Component {
        name: "SimpleBackupRestore"
        prototype: "QObject"
        exports: ["Sailfish.Vault/SimpleBackupRestore 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Mode"
            values: {
                "InvalidMode": 0,
                "Backup": 1,
                "Restore": 2,
                "Compress": 3
            }
        }
        Enum {
            name: "Status"
            values: {
                "Idle": 0,
                "Preparing": 1,
                "UnitScriptStarted": 2,
                "UnitScriptFinished": 3,
                "Compressing": 4,
                "LoadingArchive": 5,
                "Finalizing": 6,
                "Canceling": 7,
                "Finished": 100
            }
        }
        Enum {
            name: "Error"
            values: {
                "NoError": 0,
                "InternalError": 1,
                "NoDiskSpace": 2,
                "ProcessError": 3
            }
        }
        Property { name: "mode"; type: "Mode"; isReadonly: true }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "archiveType"; type: "BackupUtils::ArchiveType"; isReadonly: true }
        Property { name: "currentUnit"; type: "string"; isReadonly: true }
        Property { name: "compressedFilePath"; type: "string"; isReadonly: true }
        Property { name: "logFilePath"; type: "string"; isReadonly: true }
        Property { name: "canceled"; type: "bool"; isReadonly: true }
        Property { name: "error"; type: "Error"; isReadonly: true }
        Property { name: "errorString"; type: "string"; isReadonly: true }
        Method {
            name: "backup"
            Parameter { name: "unitInfoList"; type: "QVariantList" }
            Parameter { name: "compressedFilePath"; type: "string" }
        }
        Method {
            name: "restore"
            Parameter { name: "unitInfoList"; type: "QVariantList" }
            Parameter { name: "compressedFilePath"; type: "string" }
        }
        Method {
            name: "compress"
            Parameter { name: "dirPath"; type: "string" }
            Parameter { name: "compressedFilePath"; type: "string" }
        }
        Method { name: "cancel"; type: "bool" }
        Method {
            name: "unitInfo"
            type: "QVariantMap"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "script"; type: "string" }
        }
        Method {
            name: "initializeLog"
            type: "bool"
            Parameter { name: "filePath"; type: "string" }
        }
        Method {
            name: "log"
            type: "bool"
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "defaultLogFilePath"
            type: "string"
            Parameter { name: "templateFileName"; type: "string" }
            Parameter { name: "mode"; type: "Mode" }
        }
    }
    Component {
        prototype: "QObject"
        name: "Remorse 1.0"
        exports: ["Remorse 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        isCreatable: false
        isSingleton: true
        Property { name: "_itemComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "_popupComponent"; type: "QQmlComponent"; isPointer: true }
        Method {
            name: "_create"
            type: "QVariant"
            Parameter { name: "component"; type: "QVariant" }
            Parameter { name: "parent"; type: "QVariant" }
        }
        Method {
            name: "itemAction"
            type: "QVariant"
            Parameter { name: "item"; type: "QVariant" }
            Parameter { name: "text"; type: "QVariant" }
            Parameter { name: "action"; type: "QVariant" }
            Parameter { name: "timeout"; type: "QVariant" }
        }
        Method {
            name: "popupAction"
            type: "QVariant"
            Parameter { name: "page"; type: "QVariant" }
            Parameter { name: "text"; type: "QVariant" }
            Parameter { name: "action"; type: "QVariant" }
            Parameter { name: "timeout"; type: "QVariant" }
        }
    }
}
