import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated with the command '/usr/lib/qt5/bin/qmlplugindump -nonrelocatable Sailfish.Ambience 1.0'.

Module {
    Component {
        name: "AbstractContentModel"
        prototype: "QAbstractListModel"
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "count"; type: "int"; isReadonly: true }
        Method {
            name: "get"
            type: "QJSValue"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "AmbienceModel"
        prototype: "AbstractContentModel"
        exports: ["Sailfish.Ambience/AmbienceModel 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Filter"
            values: {
                "NoFilter": 0,
                "FavoritesOnly": 1,
                "NonFavoritesOnly": 2
            }
        }
        Property { name: "filter"; type: "Filter" }
        Method {
            name: "set"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "properties"; type: "QJSValue" }
        }
        Method {
            name: "setProperty"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "property"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "remove"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "makeCurrent"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "DeclarativeAmbience"
        prototype: "QObject"
        exports: ["Sailfish.Ambience/Ambience 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QUrl" }
        Property { name: "applicationWallpaper"; type: "QUrl"; isReadonly: true }
        Property { name: "homeWallpaper"; type: "QUrl"; isReadonly: true }
        Method {
            name: "create"
            Parameter { name: "source"; type: "QUrl" }
        }
    }
    Component {
        name: "PhotoModel"
        prototype: "AbstractContentModel"
        exports: ["Sailfish.Ambience/PhotoModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "nameFilter"; type: "string" }
    }
    Component {
        name: "ProfileManager"
        prototype: "QObject"
        exports: ["Sailfish.Ambience/Profile 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Profile"
            values: {
                "Ambience": 0,
                "General": 1,
                "Silent": 2,
                "Unknown": 3
            }
        }
        Enum {
            name: "ToneId"
            values: {
                "RingerVolume": 0,
                "RingerTone": 1,
                "MessageTone": 2,
                "ChatTone": 3,
                "MailTone": 4,
                "InternetCallTone": 5,
                "CalendarTone": 6,
                "ClockAlarmTone": 7
            }
        }
        Property { name: "profile"; type: "ProfileManager::Profile" }
        Property { name: "activeProfile"; type: "ProfileManager::Profile"; isReadonly: true }
        Property { name: "ringerVolume"; type: "int" }
        Property { name: "ringerToneFile"; type: "string" }
        Property { name: "messageToneFile"; type: "string" }
        Property { name: "chatToneFile"; type: "string" }
        Property { name: "mailToneFile"; type: "string" }
        Property { name: "internetCallToneFile"; type: "string" }
        Property { name: "calendarToneFile"; type: "string" }
        Property { name: "clockAlarmToneFile"; type: "string" }
        Property { name: "ringerToneEnabled"; type: "bool" }
        Property { name: "messageToneEnabled"; type: "bool" }
        Property { name: "chatToneEnabled"; type: "bool" }
        Property { name: "mailToneEnabled"; type: "bool" }
        Property { name: "internetCallToneEnabled"; type: "bool" }
        Property { name: "calendarToneEnabled"; type: "bool" }
        Property { name: "clockAlarmToneEnabled"; type: "bool" }
        Property { name: "activateProfileOnChange"; type: "bool" }
        Signal { name: "messageToneVolumeChanged" }
        Signal { name: "profileUpdated" }
        Method { name: "clear" }
        Method {
            name: "clearToneSettings"
            Parameter { name: "id"; type: "ToneId" }
        }
        Method {
            name: "clearTone"
            Parameter { name: "id"; type: "ToneId" }
        }
    }
}
