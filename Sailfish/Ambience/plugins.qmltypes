import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable -noinstantiate Sailfish.Ambience 1.0'

Module {
    dependencies: [
        "QtQml 2.0",
        "QtQuick 2.6",
        "QtQuick.Window 2.1",
        "QtWebKit 3.0",
        "QtWebKit.experimental 1.0",
        "Sailfish.Silica 1.0",
        "Sailfish.Silica.private 1.0",
        "org.nemomobile.configuration 1.0",
        "org.nemomobile.thumbnailer 1.0"
    ]
    Component {
        name: "AbstractContentModel"
        prototype: "QAbstractListModel"
        Enum {
            name: "Status"
            values: {
                "Null": 0,
                "Querying": 1,
                "Finished": 2,
                "Error": 3
            }
        }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "count"; type: "int"; isReadonly: true }
        Method {
            name: "get"
            type: "QJSValue"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "set"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "properties"; type: "QJSValue" }
        }
        Method {
            name: "setProperty"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "property"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "remove"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "indexOf"
            type: "int"
            Parameter { name: "property"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        name: "AmbienceModel"
        prototype: "AbstractContentModel"
        exports: ["Sailfish.Ambience/AmbienceModel 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Filter"
            values: {
                "NoFilter": 0,
                "FavoritesOnly": 1,
                "NonFavoritesOnly": 2
            }
        }
        Property { name: "filter"; type: "Filter" }
        Method {
            name: "makeCurrent"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "ContentInfo"
        defaultProperty: "data"
        prototype: "QObject"
        exports: ["Sailfish.Ambience/ContentInfo 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ContentType"
            values: {
                "File": 0,
                "Ambience": 1,
                "Photo": 2,
                "Video": 3,
                "Download": 4
            }
        }
        Property { name: "contentId"; type: "qlonglong" }
        Property { name: "url"; type: "QUrl" }
        Property { name: "contentType"; type: "ContentType" }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
        Signal { name: "changed" }
        Method { name: "save" }
        Method { name: "remove" }
    }
    Component {
        name: "DeclarativeAmbience"
        prototype: "QObject"
        exports: ["Sailfish.Ambience/Ambience 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QUrl" }
        Property { name: "applicationWallpaper"; type: "QUrl"; isReadonly: true }
        Property { name: "homeWallpaper"; type: "QUrl"; isReadonly: true }
        Method {
            name: "setAmbience"
            Parameter { name: "source"; type: "QUrl" }
            Parameter { name: "callback"; type: "QJSValue" }
        }
        Method {
            name: "setAmbience"
            Parameter { name: "source"; type: "QUrl" }
        }
        Method {
            name: "create"
            Parameter { name: "source"; type: "QUrl" }
            Parameter { name: "callback"; type: "QJSValue" }
        }
        Method {
            name: "create"
            Parameter { name: "source"; type: "QUrl" }
        }
        Method {
            name: "highlightDimmerColor"
            type: "QColor"
            Parameter { name: "color"; type: "QColor" }
        }
        Method {
            name: "highlightBackgroundColor"
            type: "QColor"
            Parameter { name: "color"; type: "QColor" }
        }
    }
    Component {
        name: "PhotoModel"
        prototype: "AbstractContentModel"
        exports: ["Sailfish.Ambience/PhotoModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "nameFilter"; type: "string" }
    }
    Component {
        name: "ProfileManager"
        prototype: "QObject"
        exports: ["Sailfish.Ambience/Profile 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Profile"
            values: {
                "Ambience": 0,
                "General": 1,
                "Silent": 2,
                "Unknown": 3
            }
        }
        Enum {
            name: "ToneId"
            values: {
                "RingerVolume": 0,
                "RingerTone": 1,
                "MessageTone": 2,
                "ChatTone": 3,
                "MailTone": 4,
                "InternetCallTone": 5,
                "CalendarTone": 6,
                "ClockAlarmTone": 7
            }
        }
        Property { name: "profile"; type: "ProfileManager::Profile" }
        Property { name: "activeProfile"; type: "ProfileManager::Profile" }
        Property { name: "ringerVolume"; type: "int" }
        Property { name: "ringerToneFile"; type: "string" }
        Property { name: "messageToneFile"; type: "string" }
        Property { name: "chatToneFile"; type: "string" }
        Property { name: "mailToneFile"; type: "string" }
        Property { name: "internetCallToneFile"; type: "string" }
        Property { name: "calendarToneFile"; type: "string" }
        Property { name: "clockAlarmToneFile"; type: "string" }
        Property { name: "ringerToneEnabled"; type: "bool" }
        Property { name: "messageToneEnabled"; type: "bool" }
        Property { name: "chatToneEnabled"; type: "bool" }
        Property { name: "mailToneEnabled"; type: "bool" }
        Property { name: "internetCallToneEnabled"; type: "bool" }
        Property { name: "calendarToneEnabled"; type: "bool" }
        Property { name: "clockAlarmToneEnabled"; type: "bool" }
        Property { name: "activateProfileOnChange"; type: "bool" }
        Signal { name: "messageToneVolumeChanged" }
        Signal { name: "profileUpdated" }
        Method { name: "clear" }
        Method {
            name: "clearToneSettings"
            Parameter { name: "id"; type: "ToneId" }
        }
        Method {
            name: "clearTone"
            Parameter { name: "id"; type: "ToneId" }
        }
    }
    Component {
        name: "ToneModel"
        prototype: "AbstractContentModel"
        exports: ["Sailfish.Ambience/ToneModel 1.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        prototype: "QObject"
        name: "Remorse 1.0"
        exports: ["Remorse 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        isCreatable: false
        isSingleton: true
        Property { name: "_itemComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "_popupComponent"; type: "QQmlComponent"; isPointer: true }
        Method {
            name: "_create"
            type: "QVariant"
            Parameter { name: "component"; type: "QVariant" }
            Parameter { name: "parent"; type: "QVariant" }
        }
        Method {
            name: "itemAction"
            type: "QVariant"
            Parameter { name: "item"; type: "QVariant" }
            Parameter { name: "text"; type: "QVariant" }
            Parameter { name: "action"; type: "QVariant" }
            Parameter { name: "timeout"; type: "QVariant" }
        }
        Method {
            name: "popupAction"
            type: "QVariant"
            Parameter { name: "page"; type: "QVariant" }
            Parameter { name: "text"; type: "QVariant" }
            Parameter { name: "action"; type: "QVariant" }
            Parameter { name: "timeout"; type: "QVariant" }
        }
    }
}
