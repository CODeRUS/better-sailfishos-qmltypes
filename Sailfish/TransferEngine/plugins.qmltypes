import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated with the command '/usr/lib/qt5/bin/qmlplugindump -nonrelocatable Sailfish.TransferEngine 1.0'.

Module {
    Component {
        name: "DeclarativeContentAction"
        prototype: "QObject"
        exports: ["Sailfish.TransferEngine/ContentAction 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Error"
            values: {
                "NoError": 0,
                "FileTypeNotSupported": 1,
                "FileDoesNotExist": 2,
                "InvalidUrl": 3
            }
        }
        Property { name: "error"; type: "Error"; isReadonly: true }
        Method {
            name: "trigger"
            type: "bool"
            Parameter { name: "url"; type: "QUrl" }
        }
    }
    Component {
        name: "DeclarativeShare"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Sailfish.TransferEngine/SailfishShare 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "NotStarted": 1,
                "TransferStarted": 2,
                "TransferCanceled": 3,
                "TransferFinished": 4,
                "TransferInterrupted": 5
            }
        }
        Property { name: "source"; type: "QUrl" }
        Property { name: "content"; type: "QVariantMap" }
        Property { name: "serviceId"; type: "string" }
        Property { name: "mimeType"; type: "string" }
        Property { name: "userData"; type: "QVariantMap" }
        Property { name: "metadataStripped"; type: "bool" }
        Property { name: "notificationsEnabled"; type: "bool" }
        Property { name: "progress"; type: "float"; isReadonly: true }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Signal {
            name: "progressChanged"
            Parameter { name: "progress"; type: "float" }
        }
        Signal {
            name: "statusChanged"
            Parameter { name: "status"; type: "Status" }
        }
        Method { name: "start" }
        Method { name: "cancel" }
    }
    Component {
        name: "DeclarativeTransferInterface"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Sailfish.TransferEngine/SailfishTransferInterface 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "TransferFinished": 4,
                "TransferCanceled": 3,
                "TransferInterrupted": 5
            }
        }
        Property { name: "enableNotifications"; type: "bool" }
        Signal { name: "notificationsChanged" }
        Method {
            name: "cbCancelTransfer"
            Parameter { name: "transferId"; type: "int" }
        }
        Method {
            name: "cbRestartTransfer"
            Parameter { name: "transferId"; type: "int" }
        }
        Method { name: "clearTransfers" }
        Method {
            name: "startTransfer"
            Parameter { name: "transferId"; type: "int" }
        }
        Method {
            name: "createDownloadEvent"
            type: "int"
            Parameter { name: "displayName"; type: "string" }
            Parameter { name: "applicationIcon"; type: "QUrl" }
            Parameter { name: "serviceIcon"; type: "QUrl" }
            Parameter { name: "url"; type: "QUrl" }
            Parameter { name: "mimeType"; type: "string" }
            Parameter { name: "expectedFileSize"; type: "qulonglong" }
            Parameter { name: "callback"; type: "QStringList" }
            Parameter { name: "cancelMethod"; type: "string" }
            Parameter { name: "restartMethod"; type: "string" }
        }
        Method {
            name: "createSyncEvent"
            type: "int"
            Parameter { name: "displayName"; type: "string" }
            Parameter { name: "applicationIcon"; type: "QUrl" }
            Parameter { name: "serviceIcon"; type: "QUrl" }
            Parameter { name: "callback"; type: "QStringList" }
            Parameter { name: "cancelMethod"; type: "string" }
            Parameter { name: "restartMethod"; type: "string" }
        }
        Method {
            name: "updateTransferProgress"
            Parameter { name: "transferId"; type: "int" }
            Parameter { name: "progress"; type: "float" }
        }
        Method {
            name: "finishTransfer"
            Parameter { name: "transferId"; type: "int" }
            Parameter { name: "status"; type: "Status" }
            Parameter { name: "reason"; type: "string" }
        }
    }
    Component {
        name: "DeclarativeTransferMethodsModel"
        prototype: "QAbstractListModel"
        exports: ["Sailfish.TransferEngine/SailfishTransferMethodsModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "filter"; type: "string" }
        Signal { name: "rowCountChanged" }
        Method {
            name: "get"
            type: "QVariantMap"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "findMethod"
            type: "int"
            Parameter { name: "methodId"; type: "string" }
        }
    }
    Component {
        name: "DeclarativeTransferModel"
        prototype: "QAbstractListModel"
        exports: ["Sailfish.TransferEngine/SailfishTransferModel 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "TransferStatus"
            values: {
                "NotStarted": 1,
                "TransferStarted": 2,
                "TransferCanceled": 3,
                "TransferFinished": 4,
                "TransferInterrupted": 5
            }
        }
        Enum {
            name: "TransferType"
            values: {
                "Upload": 1,
                "Download": 2,
                "Sync": 3
            }
        }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "transfersInProgress"; type: "int"; isReadonly: true }
        Signal { name: "rowCountChanged" }
        Signal {
            name: "transferStatusChanged"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "status"; type: "int" }
        }
        Method { name: "clearTransfers" }
        Method {
            name: "get"
            type: "QVariantMap"
            Parameter { name: "index"; type: "int" }
        }
    }
}
